{"version":3,"sources":["components/Panel/TapePanel/TapePanel.module.scss","components/Panel/ConsolePanel/Console.module.scss","components/Panel/CodePanel/CodePanel.module.scss","components/Panel/ControlPanel/ControlPanel.module.scss","components/Panel/ResultPanel/ResultPanel.module.scss","components/Panel/AnswerPanel/AnswerPanel.module.scss","components/Panel/TestPanel/TestPanel.module.scss","reducers/javascript.js","reducers/react.js","reducers/login.js","utils/authLogin.js","reducers/category.js","reducers/tape.js","reducers/console.js","reducers/index.js","components/Pages/LoginPage/index.js","actions/login.js","components/Border/index.js","components/Grid/index.js","components/Grid/GridItem.js","components/Panel/ConsolePanel/index.js","components/Panel/CodePanel/index.js","questions/index.js","questions/javascript.js","questions/react.js","utils/stateHelper.js","components/Selectors/QuestionSelector/index.js","actions/code.js","components/Selectors/CategorySelector/index.js","actions/category.js","components/Panel/ControlPanel/index.js","components/Panel/ResultPanel/index.js","components/Panel/AnswerPanel/index.js","utils/spy.js","utils/tape.js","utils/runCode.js","components/Pages/ReactPage/index.js","actions/console.js","components/Panel/TestPanel/index.js","components/Panel/TapePanel/index.js","components/Pages/JavaScriptPage/index.js","actions/tape.js","utils/consoleFactory.js","components/Pages/Page/index.js","App.js","index.js","components/Grid/Grid.module.scss","components/Border/Border.module.scss"],"names":["module","exports","tape","test","description","assert","name","actual","not-equal","expected","ok","fail","diff","console","code","control","result","answer","test-panel","state","arguments","length","undefined","index","action","type","Object","objectSpread","defineProperty","compiledCode","rawCode","login","s","isLogin","password","concat","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","slice","category","toConsumableArray","data","Console","key","args","reducer","combineReducers","javascript","react","_console","LoginPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","e","actions","preventDefault","submitPassword","error","_this$props","history","push","_this2","react_default","a","createElement","className","style","display","input","placeholder","onChange","setState","target","value","width","marginRight","es_button","htmlType","React","Component","withRouter","connect","dispatch","Border","allowWidth","allowHeight","disabled","borderSize","ref","createRef","resize","bind","assertThisInitialized","startResize","endResize","_this$props2","height","onUpdate","maxHeight","maxWidth","minWidth","minHeight","newHeight","clientY","current","offsetTop","newWidth","clientX","offsetLeft","window","removeEventListener","dispatchEvent","Event","contains","addEventListener","_this$props3","children","finalClassName","styles","border","horizontal","paddingRight","vertical","paddingBottom","onMouseDown","Grid","onResize","updateFullState","_this$ref$current","totalWidth","clientWidth","totalHeight","clientHeight","newData","map","column","indexOfColumn","item","indexOfItem","sumOfWidth","c","reduce","cal","val","sumOfHeight","updateGridState","_ref","_this$ref$current2","layout","columns","newCal","x","sort","b","y","autoResize","grid","Math","max","apply","min","finalWidth","components_Border","_ref2","w","JSON","stringify","itemInData","itemInColumns","isDisabled","static","_ref3","h","find","_ref4","GridItem","Text","text","Fragment","trim","stack","message","ConsolePanel_Text","CodePanel","handleCodeChange","mode","theme","lib_default","showPrintMargin","tabSize","debounceChangePeriod","Questions","content","getCategories","keys","getQuestions","categories","getStateInformation","categoryIndex","questionIndex","questions","question","_state$type","Option","Select","changeQuestion","_getStateInformation","es_select","toUpperCase","defaultValue","q","i","changeCategory","CategorySelector_Option","resetQuestion","Selectors_CategorySelector","Selectors_QuestionSelector","onClick","ResultPanel","id","AnswerPanel","spy","obj","methodName","origFn","callHistory","calledWith","secret","random","toFixed","_len","Array","_key","join","_len2","_key2","callCount","restore","tryCatchPatch","t","testBlock","comment","getPatchedTape","patches","harness","createHarness","createStream","objectMode","on","subtest","should","_args$slice","cb","slicedToArray","Error","wrapCode","replace","loopHead","runCode","wrappedConsole","onTapeUpdate","script","context","clock","sinon","useFakeTimers","sandbox","setTimeout","describe","ReactDOM","root","document","getElementById","vm","Script","createContext","runInContext","log","ReactPage","controlHeight","resetConsole","debouncedRunCode","nextProps","previousCompiledCode","innerWidth","innerHeight","Grid_Grid","Grid_GridItem","Panel_CodePanel","Panel_AnswerPanel","Panel_ControlPanel","Panel_ResultPanel","ConsolePanel","TestPanel","readOnly","TestRow","row","AssertRow","EndRow","DescriptionRow","getRow","TapePanel_TestRow","assign","TapePanel_AssertRow","TapePanel_EndRow","TapePanel_DescriptionRow","TapePanel","JavaScriptPage","addTape","resetTape","Panel_TestPanel","Panel_TapePanel","createWrappedConsole","Page","newCode","fullCode","transform","presets","decoratorsBeforeExport","plugins","changeCode","_dispatch","prevProps","previousState","previousCategoryIndex","_getStateInformation4","Pages_ReactPage","Pages_JavaScriptPage","getPageComponent","App","BrowserRouter","basename","process","Route","exact","path","component","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","render","es","src_App"],"mappings":"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","file":"static/js/main.9fd3446d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tape\":\"TapePanel_tape__2hDVC\",\"test\":\"TapePanel_test__2hyge\",\"description\":\"TapePanel_description__tZ_w-\",\"assert\":\"TapePanel_assert__1FE9p\",\"name\":\"TapePanel_name__1xh1W\",\"actual\":\"TapePanel_actual__1L2nd\",\"not-equal\":\"TapePanel_not-equal__2fZ2h\",\"expected\":\"TapePanel_expected__oknZA\",\"ok\":\"TapePanel_ok__3DzD4\",\"fail\":\"TapePanel_fail__2V1Fo\",\"diff\":\"TapePanel_diff__1mliQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"console\":\"Console_console__3DwpZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"CodePanel_code__2KkLe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlPanel_control__r_i7k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"ResultPanel_result__1FxrI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answer\":\"AnswerPanel_answer__16lNZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test-panel\":\"TestPanel_test-panel__3m6qE\"};","const code = (state = { index: 0 }, action) => {\n  switch (action.type) {\n    case 'JAVASCRIPT/CODE/RESET':\n      return state;\n    case 'JAVASCRIPT/CODE/CHANGE':\n      return {\n        ...state,\n        compiledCode: action.compiledCode || state.compiledCode,\n        [state.index]: {\n          code: action.rawCode\n        }\n      };\n    case 'JAVASCRIPT/QUESTION/RESET':\n      return {\n        ...state,\n        [state.index]: {\n          code: ''\n        }\n      };\n    case 'JAVASCRIPT/QUESTION/CHANGE':\n      return {\n        ...state,\n        index: action.index,\n        compiledCode: ''\n      };\n    default:\n      return state;\n  }\n};\n\nexport default code;\n","const code = (state = { index: 0 }, action) => {\n  switch (action.type) {\n    case 'REACT/CODE/RESET':\n      return state;\n    case 'REACT/CODE/CHANGE':\n      return {\n        ...state,\n        compiledCode: action.compiledCode || state.compiledCode,\n        [state.index]: {\n          code: action.rawCode\n        }\n      };\n    case 'REACT/QUESTION/RESET':\n      return {\n        ...state,\n        compiledCode: '',\n        [state.index]: {\n          code: ''\n        }\n      };\n    case 'REACT/QUESTION/CHANGE':\n      return {\n        ...state,\n        index: action.index,\n        compiledCode: ''\n      };\n    default:\n      return state;\n  }\n};\n\nexport default code;\n","import { authLogin } from '../utils/authLogin';\n\nconst login = (state = { isLogin: false }, action) => {\n  switch (action.type) {\n    case 'LOGIN/LOGIN': {\n      return { isLogin: authLogin(action.password) };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default login;\n","const authLogin = s => `${(new Date().getUTCFullYear() + 1) * (new Date().getUTCMonth() + 1) * (new Date().getUTCDate() + 1) * (new Date().getUTCHours() + 1)}`.slice(0, 4) === s;\n\nexport {\n  authLogin\n}","const category = (state = { index: 0 }, action) => {\n  switch (action.type) {\n    case 'CATEGORY/RESET':\n      return { index: 0 };\n    case 'CATEGORY/CHANGE':\n      return {\n        ...state,\n        index: action.index\n      };\n    default:\n      return state;\n  }\n};\n\nexport default category;\n","const tape = (state = [], action) => {\n  switch (action.type) {\n    case 'TAPE/RESET': {\n      return [];\n    }\n    case 'TAPE/ADD': {\n      return [...state, action.data];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tape;\n","const Console = (state = [], action) => {\n  switch (action.type) {\n    case 'CONSOLE/RESET':\n      return [];\n    case 'CONSOLE/ADD':\n      return [\n        ...state,\n        {\n          key: action.key,\n          args: action.args\n        }\n      ];\n    default:\n      return state;\n  }\n};\n\nexport default Console;\n","import { combineReducers } from 'redux';\nimport javascript from './javascript';\nimport react from './react';\nimport login from './login';\nimport category from './category';\nimport tape from './tape';\nimport _console from './console';\n\nconst reducer = combineReducers({\n  javascript,\n  react,\n  login,\n  category,\n  tape,\n  console: _console\n});\n\nexport default reducer;\n","import React from 'react';\nimport { Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { submitPassword } from 'actions/login';\nimport 'components/Pages/LoginPage/LoginPage.css';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { password: '', error: '' };\n  }\n\n  componentDidUpdate() {\n    const { isLogin, history } = this.props;\n    if (isLogin) {\n      history.push('/');\n    }\n  }\n\n  onSubmit = (e) => {\n    const { password } = this.state;\n    const { actions } = this.props;\n    e.preventDefault();\n    actions.submitPassword(password);\n  }\n\n  render() {\n    const { error } = this.state;\n    return (\n      <div className=\"login\">\n        <form onSubmit={this.onSubmit}>\n          <div style={{ display: 'flex' }}>\n            <Input\n              placeholder=\"input the password to login\"\n              onChange={e => this.setState({ password: e.target.value })}\n              style={{ width: 200, marginRight: 5 }}\n            />\n            <Button type=\"primary\" htmlType=\"submit\">Login</Button>\n          </div>\n        </form>\n        <div className=\"error\">{ error }</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => {\n    return {\n      isLogin: state.login.isLogin\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        submitPassword: password => dispatch(submitPassword(password))\n      }\n    };\n  }\n)(LoginPage));\n","export function submitPassword(password) {\n  return {\n    type: 'LOGIN/LOGIN',\n    password\n  };\n}\n","import React, { Component } from 'react';\nimport styles from './Border.module.scss';\n\nclass Border extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      allowWidth,\n      allowHeight,\n      disabled,\n      borderSize\n    } = this.props;\n    this.ref = React.createRef();\n    this.resize = this.resize.bind(this);\n    this.startResize = this.startResize.bind(this);\n    this.endResize = this.endResize.bind(this);\n    this.borderSize = borderSize || 10;\n    this.disabled = disabled;\n    this.allowWidth = allowWidth;\n    this.allowHeight = allowHeight;\n    this.style = {};\n  }\n\n  resize(e) {\n    const {\n      allowHeight,\n      height,\n      width,\n      onUpdate,\n      allowWidth,\n      maxHeight,\n      maxWidth,\n      minWidth,\n      minHeight\n    } = this.props;\n    let newHeight = allowHeight\n      ? e.clientY - this.ref.current.offsetTop\n      : height;\n    if (maxHeight && newHeight > maxHeight) {\n      newHeight = maxHeight;\n    }\n    if (minHeight && newHeight < minHeight) {\n      newHeight = minHeight;\n    }\n    let newWidth = allowWidth\n      ? e.clientX - this.ref.current.offsetLeft\n      : width;\n    if (maxWidth && newWidth > maxWidth) {\n      newWidth = maxWidth;\n    }\n    if (minWidth && newWidth < minWidth) {\n      newWidth = minWidth;\n    }\n    onUpdate({\n      width: newWidth,\n      height: newHeight\n    });\n  }\n\n  endResize() {\n    window.removeEventListener('mousemove', this.resize);\n    window.removeEventListener('mouseup', this.endResize);\n    window.dispatchEvent(new Event('resize'));\n  }\n\n  startResize(e) {\n    if (e.target.contains(this.ref.current)) {\n      window.addEventListener('mousemove', this.resize);\n      window.addEventListener('mouseup', this.endResize);\n    }\n  }\n\n\n  render() {\n    const {\n      width,\n      height,\n      disabled,\n      children,\n      className\n    } = this.props;\n    this.style = {\n      ...this.style,\n      width: `${width}px`,\n      height: `${height}px`\n    };\n    let finalClassName = `${styles.border} ${className || ''}`;\n    if (!disabled && this.allowWidth) {\n      finalClassName = `${finalClassName} ${styles.horizontal}`;\n      this.style.paddingRight = `${this.borderSize}px`;\n    }\n    if (!disabled && this.allowHeight) {\n      finalClassName = `${finalClassName} ${styles.vertical}`;\n      this.style.paddingBottom = `${this.borderSize}px`;\n    }\n    return (\n      <div\n        ref={this.ref}\n        className={finalClassName}\n        onMouseDown={!disabled ? this.startResize : null}\n        style={this.style}\n      >\n        { children }\n      </div>\n    );\n  }\n}\n\nexport default Border;\n","import React from 'react';\nimport Border from 'components/Border';\nimport styles from './Grid.module.scss';\n\nexport default class Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      layout,\n      borderSize\n    } = this.props;\n    this.ref = React.createRef();\n    this.borderSize = borderSize || 10;\n    this.layout = layout;\n    this.columns = layout\n      .reduce((cal, item) => {\n        const newCal = [...cal];\n        const { x } = item;\n        newCal[x] = [...(newCal[x] || []), item];\n        return newCal;\n      }, [])\n      .map(column => column || [])\n      .map(column => column.sort((a, b) => a.y - b.y));\n\n    this.state = {\n      data: this.columns.map((column) => {\n        return column.map((item) => {\n          return {\n            width: item.width,\n            height: item.height\n          };\n        });\n      })\n    };\n  }\n\n  componentDidMount() {\n    const { autoResize } = this.props;\n    if (autoResize) {\n      window.addEventListener('resize', this.onResize);\n      window.dispatchEvent(new Event('resize'));\n    }\n  }\n\n  componentWillUnmount() {\n    const { autoResize } = this.props;\n    if (autoResize) {\n      window.removeEventListener('resize', this.onResize);\n    }\n  }\n\n  onResize = () => {\n    this.updateFullState();\n  }\n\n  updateFullState = () => {\n    const { clientWidth: totalWidth, clientHeight: totalHeight } = this.ref.current;\n    const { data } = this.state;\n    const newData = data.map((column, indexOfColumn) => {\n      return column.map((item, indexOfItem) => {\n        const sumOfWidth = data\n          .slice(0, -1)\n          .map(c => (c[0] || { width: 0 }))\n          .map(c => c.width)\n          .reduce((cal, val) => cal + val, 0);\n        const sumOfHeight = column\n          .slice(0, -1)\n          .map(c => c.height)\n          .reduce((cal, val) => cal + val, 0);\n        return {\n          width: indexOfColumn === data.length - 1 ? totalWidth - sumOfWidth : item.width,\n          height: indexOfItem === column.length - 1 ? totalHeight - sumOfHeight : item.height\n        };\n      });\n    });\n    this.setState({ data: newData });\n  }\n\n  updateGridState = ({\n    indexOfColumn, indexOfItem, width, height\n  }) => {\n    const { clientWidth: totalWidth, clientHeight: totalHeight } = this.ref.current;\n    const { data } = this.state;\n    const newData = [...data];\n    if (width !== newData[indexOfColumn][0].width) {\n      newData[indexOfColumn] = newData[indexOfColumn]\n        .map((item) => {\n          return {\n            ...item,\n            width\n          };\n        });\n      newData[newData.length - 1] = newData[newData.length - 1].map((item) => {\n        return {\n          ...item,\n          width: totalWidth - width\n        };\n      });\n    } else if (height !== undefined && indexOfColumn !== undefined && indexOfItem !== undefined) {\n      newData[indexOfColumn][indexOfItem].height = height;\n      newData[indexOfColumn][newData[indexOfColumn].length - 1].height = totalHeight - newData[indexOfColumn][indexOfItem].height;\n    }\n    this.setState({ data: newData });\n  }\n\n  render() {\n    const { columns } = this;\n    const { children, totalWidth, totalHeight } = this.props;\n    const { data } = this.state;\n    return (\n      <div\n        className={styles.grid}\n        style={{\n          width: totalWidth,\n          height: totalHeight\n        }}\n        ref={this.ref}\n      >\n        {\n          columns.map((column, indexOfColumn) => {\n            const maxWidth = Math.max(...column.map(item => item.maxWidth || 0));\n            const minWidth = Math.min(...column.map(item => item.minWidth || 999999));\n            const isDisabledForWidth = indexOfColumn === columns.length - 1;\n            const finalWidth = isDisabledForWidth\n              ? data[indexOfColumn][0].width\n              : data[indexOfColumn][0].width + this.borderSize;\n            return (\n              <Border\n                allowWidth\n                borderSize={this.borderSize}\n                width={finalWidth}\n                maxWidth={maxWidth}\n                minWidth={minWidth}\n                onUpdate={({ width: w }) => this.updateGridState({\n                  indexOfColumn,\n                  width: w\n                })}\n                disabled={indexOfColumn === columns.length - 1}\n                key={JSON.stringify(column)}\n              >\n                {\n                  column.map((item, indexOfItem) => {\n                    const itemInData = data[indexOfColumn][indexOfItem];\n                    const itemInColumns = columns[indexOfColumn][indexOfItem];\n                    const isDisabled = indexOfItem === column.length - 1 || itemInColumns.static;\n                    return (\n                      <Border\n                        allowHeight\n                        borderSize={this.borderSize}\n                        width={itemInData.width}\n                        height={itemInData.height}\n                        maxHeight={itemInColumns.maxHeight}\n                        minHeight={itemInColumns.minHeight}\n                        onUpdate={({ width: w, height: h }) => this.updateGridState({\n                          indexOfItem,\n                          indexOfColumn,\n                          width: w,\n                          height: h\n                        })}\n                        disabled={isDisabled}\n                        key={JSON.stringify(item)}\n                      >\n                        { children.find(({ key }) => key === item.key) }\n                      </Border>\n                    );\n                  })\n                }\n              </Border>\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport styles from './Grid.module.scss';\n\nconst GridItem = ({ children }) => (\n  <div className={styles.item}>\n    { children }\n  </div>\n);\n\nexport default GridItem;\n","import React from 'react';\nimport styles from './Console.module.scss';\n\nconst isError = e => e && e.stack && e.message && typeof e.stack === 'string' && typeof e.message === 'string';\n\nconst Text = ({ text }) => <>{ `${text}`.trim() === '' ? <br /> : `${text}`.trim() }</>;\n\nconst Console = ({ data, className }) => (\n  <div className={`${styles.console} ${className || ''}`}>\n    Console:\n    {\n      data.map(({ args }) => (\n        <div className=\"console\" key={args}>\n          {\n            args.map((text, index) => (\n              <div className=\"text\" key={index}>\n                {\n                  typeof text === 'object' && !isError(text)\n                    ? JSON.stringify(text, null, 2)\n                    : <Text text={text} />\n                }\n              </div>\n            ))\n          }\n        </div>\n      ))\n    }\n  </div>\n);\n\nexport default Console;\n","import React from 'react';\nimport AceEditor from 'react-ace';\n\nimport styles from './CodePanel.module.scss';\n\nconst CodePanel = ({\n  handleCodeChange,\n  data,\n  mode,\n  theme\n}) => (\n  <AceEditor\n    className={styles.code}\n    showPrintMargin={false}\n    mode={mode}\n    theme={theme}\n    onChange={handleCodeChange}\n    value={data}\n    tabSize={2}\n    debounceChangePeriod={800}\n  />\n);\n\nexport default CodePanel;\n","import javascript from 'questions/javascript';\nimport react from 'questions/react';\n\nconst Questions = {\n  javascript,\n  react\n};\n\nconst getCategories = () => Object.keys(Questions).map((name) => { return { name }; });\n\nconst getQuestions = type => Questions[type];\n\nexport {\n  getCategories,\n  getQuestions\n};\n","const questionList = [\n  {\n    name: 'countChar',\n    content: `\n/**\n * Implement the function 'countChar'\n * to count the occurance of each character for the input string,\n * and return an object containing those information.\n *\n * For example :\n *  input string: 'abca'\n *\n *  returned object:\n *  {\n *     a: 2,\n *     b: 1,\n *     c: 1\n *  }\n */\n\n/**\n * Implement function body\n */\nfunction countChar(s) {\n\n}\n\n`,\n    test: `\ntest('countChar test', (t) => {\n  t.subtest('should return character count in an object', t => {\n    const result = countChar();\n    t.equal(typeof result, 'object');\n  });\n  t.subtest('should be able to count chars', t => {\n    const input = 'abca';\n    const result = countChar(input);\n    t.equal(result.a, 2);\n    t.equal(result.b, 1);\n  });\n  t.subtest('should be able count some longer string as well', t => {\n    const input = 'The Quick Brown Fox Jumps Over The Lazy Dog';\n    const result = countChar(input);\n    t.equal(result[' '], 8);\n    t.equal(result.T, 2);\n    t.equal(result.o, 3);\n  });\n})\n\n`\n  },\n  {\n    name: 'forEach, map and reduce',\n    content: `\n/**\n * Implement the function 'forEach, map and reduce'\n *\n */\n\n/**\n * Implement function body\n */\nconst myForEach = function (array, callback) {\n\n}\n\nconst myMap = function (array, callback) {\n\n}\n\nconst myReduce = function (array, callback, initValue) {\n\n}\n\n`,\n    test: `\ntest('forEach, map and reduce test', (t) => {\n  t.subtest('should execute forEach correctly', t => {\n    let count = 0;\n    myForEach([1, 2, 3, 4], (val, index) => count += val * index * index);\n    t.equal(count, 50);\n  });\n  t.subtest('should execute map correctly', t => {\n    const result = myMap([1, 2, 3, 4], (val, index) => val * index * index);\n    t.equal(result[0], 0);\n    t.equal(result[2], 12);\n  });\n  t.subtest('should execute reduce correctly', t => {\n    const result = myReduce([10, 2, 3], (cal, val, index) => cal + val * index, 0);\n    t.equal(result, 8);\n  });\n});\n\n`\n  },\n  {\n    name: 'adder',\n    content: `\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *   addTen = adder(10)\n *   addFive = adder(5)\n *\n *   addTen(10)  // return 20\n *   addFive(10) // return 15\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n`,\n    test: `\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should be able to add two numbers', t => {\n    const add5 = adder(5);\n    t.equal(add5(10), 15);\n    t.equal(add5(20), 25);\n\n    t.equal(adder(40)(2), 42);\n  });\n})\n\n`\n  },\n  {\n    name: 'infinite adder',\n    content: `\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *\n *   adder(10)(20)(30).getValue()  // return 60\n *   adder(10)(20)(30)(40).getValue() // return 100\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n`,\n    test: `\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should get default value with 0', t => {\n    t.equal(adder().getValue(), 0);\n  });\n  t.subtest('should be able to add mutiple numbers', t => {\n    t.equal(adder(10).getValue(), 10);\n    t.equal(adder(10)(20)(30).getValue(), 60);\n    t.equal(adder(10)(20)(30)(40).getValue(), 100);\n  });\n})\n\n`\n  },\n  {\n    name: 'default function',\n    content: `\n/**\n * Implement a function 'defaultWith'\n * which behavior is like the following example\n *\n * ex:\n *\n *   const fn = ({ a, b }) => a + b;\n *   const boundFn = defaultWith(fn, { a: 10 });\n *   boundFn({ b: 20 }); // return 30\n*/\n\n/**\n * Implement function body\n */\nfunction defaultWith() {\n}\n\n`,\n    test: `\ntest('defaultWith test', (t) => {\n  t.subtest('should return a function', t => {\n    const fn = () => {};\n    t.equal(typeof defaultWith(fn, {}), 'function');\n  });\n  t.subtest('should get correct result when all parameters are given', t => {\n    const fn = ({ a, b }) => a * 2 + b * 3;\n    const boundFn = defaultWith(fn, { a: 3 });\n    t.equal(boundFn({ b: 4 }), 18);\n  });\n  t.subtest('should get correct result when all parameters are given', t => {\n    const fn = ({ x, y, z }) => x * y * z;\n    const boundFn = defaultWith(fn, { x: 3, y: 4 });\n    t.equal(boundFn({ x: 7, z: 2 }), 56);\n  });\n})\n\n`\n  },\n  {\n    name: 'sequential',\n    content: `\n/**\n * Implement the function 'sequential'\n * to execute async functions in sequence.\n *\n * 'sequential' takes an array of async functions as parameter,\n * and execute each of them after previous one has done.\n */\n\n/**\n * Implement function body\n */\nfunction sequential(tasks = []) {\n\n}\n\n`,\n    test: `\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('sequential test', (t) => {\n  const log = spy(console, 'log');\n  sequential(tasks);\n  t.equal(log.callCount(), 0);\n  clock.tick(600);\n  t.equal(log.callCount(), 1);\n  t.ok(log.calledWith('task 1 done'));\n  clock.tick(600);\n  t.equal(log.callCount(), 3);\n  t.ok(log.calledWith('task 3 done'));\n});\n\n    `\n  },\n  {\n    name: 'parallel',\n    content: `\n/**\n * Implement the function 'parallel'\n * to execute async functions at once.\n *\n * 'parallel' takes an array of async functions as parameter,\n * and execute each of them in the same time.\n *\n */\n\n/**\n * Implement function body\n */\nfunction parallel(tasks = [], callback) {\n}\n\n`,\n    test: `\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('parallel test', t => {\n  t.subtest('should run all tasks at once', t => {\n    const spyLog = spy(console, 'log');\n    parallel(tasks, (result) => { /* do nothing */ });\n    t.equal(spyLog.callCount(), 0);\n    clock.tick(600);\n    t.equal(spyLog.callCount(), 3);\n  });\n\n  t.subtest('should get task result in an array', t => {\n    let obj = {};\n    parallel(tasks, (result) => {\n      obj.result = result;\n    });\n    clock.tick(600);\n    t.deepEqual(obj.result, [1, 2, 3]);\n  });\n\n  t.subtest('should trigger callback only once', t => {\n    let count = 0;\n    const callback = () => count++;\n\n    parallel(tasks, callback);\n    clock.tick(300);\n    t.equal(count, 0);\n    clock.tick(600);\n    t.equal(count, 1);\n  });\n});\n\n`\n  },\n  {\n    name: 'combineReducers',\n    content: `\n// http://redux.js.org/docs/api/combineReducers.html\nfunction combineReducers(reducers) {\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nfunction calledCount(state = 0, action) {\n  if(action.type == 'CALL') {\n    return state + 1;\n  }\n  return state;\n}\n\n`,\n    test: `\ntest('combineReducers', t => {\n  const reducer = combineReducers({\n    calc: calc,\n    calls: calledCount,\n  });\n\n  t.subtest('should init states', t => {\n    let state = {};\n    state = reducer(state, {type: ''});\n    t.equal(state.calc, 0);\n    t.equal(state.calls, 0);\n  });\n\n  t.subtest('should handle actions', t => {\n    let state = {};\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 1);\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 2);\n  });\n})\n`\n  },\n  {\n    name: 'applyMiddleware',\n    content: `\n// http://redux.js.org/docs/api/applyMiddleware.html\n\nfunction applyMiddleware(...middlewares) {\n  return createStore => (...args) => {\n    const store = createStore(...args);\n    let dispatch = store.dispatch;\n    /**************************\n     implement              here\n     **************************/\n\n\n\n\n    /***************************/\n    return Object.assign(store, { dispatch })\n  }\n}\n\n`,\n    test: `\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  if (typeof enhancer !== 'undefined') {\n    return enhancer(createStore)(reducer, preloadedState)\n  }\n\n  let currentReducer = reducer;\n  let currentState = preloadedState;\n\n  function getState() {\n    return currentState;\n  }\n\n  function dispatch(action) {\n    currentState = currentReducer(currentState, action);\n  }\n\n  dispatch({ type: '@@INIT' });\n\n  return {\n    dispatch,\n    getState\n  };\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst thunk = ({ getState, dispatch }) => next => action => {\n  if (typeof action === 'function') {\n    return action(dispatch, getState);\n  }\n  return next(action);\n}\n\ntest('applyMiddleware test', t => {\n\n  t.subtest('should execute normal action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute function action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n\n  t.subtest('should apply mutiple middlewares in the right order', t => {\n    let logCount = 1;\n    const log = () => next => action => {\n      logCount += 1;\n      next(action);\n    }\n    const log2 = () => next => action => {\n      logCount *= 2;\n      next(action);\n    }\n    const store = createStore(calc, 0, applyMiddleware(log, log2));\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(logCount, 22);\n  });\n})\n`\n  },\n  {\n    name: 'createStore',\n    content: `\n// http://redux.js.org/docs/api/createStore.html\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  function getState() {\n\n  }\n\n  function subscribe(listener) {\n\n  }\n\n  function dispatch(action) {\n\n  }\n\n  dispatch({ type: '@@INIT' })\n\n  return {\n    dispatch,\n    subscribe,\n    getState\n  }\n}\n\n\n`,\n    test: `\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst wrappedThunk = (createStore) => {\n  return function (...args) {\n    const store = createStore(...args);\n    const { dispatch, getState } = store;\n    store.dispatch = (action) => {\n      if (typeof action === 'function') {\n        return action(dispatch, getState);\n      }\n      dispatch(action);\n    }\n    return store;\n  }\n}\n\ntest('createStore test', t => {\n\n  t.subtest('should execute getState successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n  });\n\n  t.subtest('should execute dispatch successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute subscribe and unsubscribe successfully', t => {\n    const store = createStore(calc, 0);\n    let dispatchCount = 1;\n    let dispatchCount2 = 3;\n    const unsubscribeForCount = store.subscribe(() => dispatchCount *= 2);\n    const unsubscribeForCount2 = store.subscribe(() => dispatchCount2 *= 2);\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n    t.equal(dispatchCount2, 24);\n    unsubscribeForCount();\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    unsubscribeForCount2();\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n    t.equal(dispatchCount2, 96);\n  });\n\n  t.subtest('should execute enhancer successfully', t => {\n    const store = createStore(calc, 0, wrappedThunk);\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n})\n`\n  },\n  {\n    name: 'explain',\n    content: `\n// explain the purpose of following code;\n// modify variable name and/or code style when appropriate;\n// add comments where you see fit\nfunction foo(a, b) {\n  var c = [];\n  for(var i0 = 0, i1 = 0; i0 < a.length && i1 < b.length; ) {\n    if(a[i0] < b[i1]) {\n      c.push(a[i0++]);\n    }\n    if(a[i0] >= b[i1]) {\n      c.push(b[i1++]);\n    }\n  }\n  if(i0 < a.length) {\n    for(var i = i0; i < a.length; i++) {\n      c.push(a[i]);\n    }\n  }\n  if(i1 < b.length) {\n    for(var i = i1; i < b.length; i++) {\n      c.push(b[i]);\n    }\n  }\n  return c;\n}\n\nconsole.log(foo([1,4,5], [2,3,6]))\n`\n  },\n  {\n    name: 'mergeSort',\n    content: `\n// implement function merge, so mergeSort can run correctly\nfunction merge(arr1, arr2) {\n  // TODO enter your code here\n  return arr1;\n}\n\nfunction mergeSort(arr) {\n  if(arr.length <= 1) {\n    return arr;\n  }\n  const mid = Math.floor(arr.length / 2);\n  const sortedArr1 = mergeSort(arr.slice(0, mid));\n  const sortedArr2 = mergeSort(arr.slice(mid));\n  return merge(sortedArr1, sortedArr2);\n}\n\n`,\n    test: `\ntest('mergeSort', t => {\n  t.deepEqual(mergeSort([6,3,5,10,2,100,4,1]),[1,2,3,4,5,6,10,100]);\n  const randomNumbers = Array.from({length: 20})\n    .map(() => Math.floor(Math.random() * 100));\n  const sorted = randomNumbers.slice(0).sort((a, b) => a - b);\n  t.deepEqual(mergeSort(randomNumbers), sorted);\n})\n`\n  },\n];\n\nexport default questionList;\n","const questionList = [\n  {\n    name: 'Search',\n    content: `\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n      </div>\n    );\n  }\n}\n\nconst search = (query) => new Promise((resolve, reject) => {\n  const result = DATA.filter(({ name }) => name.includes(query.toLowerCase()));\n  if (result.length !== 0) {\n    resolve(result);\n  } else {\n    reject(new Error('not found'));\n  }\n});\n\nconst Item = ({ name, price }) => (\n  <div>\n    { name }: { price }$ \n  </div>\n);\n\nconst DATA = [\n  {\n    name: 'apple',\n    price: 10,\n    id: 1\n  },\n  {\n    name: 'orange',\n    price: 15,\n    id: 2\n  },\n  {\n    name: 'banana',\n    price: 7,\n    id: 3\n  },\n]\n\nReactDOM.render(\n  <App />,\n  root\n);\n\n`,\n    test: `\nclass AnswerApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '', data: [] };\n  }\n  changeValue = async (name) => {\n    this.setState({ value: name });\n    if (name.trim() === '') {\n      this.setState({ data: [] });\n      return;\n    }\n    try {\n      const result = await search(name);\n      this.setState({ data: result });\n    } catch (e) {\n      this.setState({ data: [] });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div>Hi, I want to buy { this.state.value }</div>\n        <input onChange={e => this.changeValue(e.target.value)}/>\n        <div>\n          {\n            this.state.data.map(({ price, name, id }) => <Item price={price} name={name} key={id} /> )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <AnswerApp />,\n  answer\n);\n\n`\n  },\n];\n\nexport default questionList;\n","import { getQuestions, getCategories } from 'questions/index';\n\nconst categories = getCategories();\n\nconst getStateInformation = (state) => {\n  const categoryIndex = state.category.index;\n  const type = categories[categoryIndex].name;\n  const questionIndex = state[type].index;\n  const questions = getQuestions(type);\n  const question = questions[questionIndex];\n  const { index, compiledCode } = state[type];\n  const code = (state[type][index] && state[type][index].code) || questions[questionIndex].content;\n  return {\n    type,\n    categoryIndex,\n    questionIndex,\n    questions,\n    question,\n    code,\n    compiledCode\n  };\n};\n\nexport {\n  getStateInformation\n};\n","import React from 'react';\nimport { Select } from 'antd';\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { changeQuestion } from 'actions/code';\n\nimport { getStateInformation } from 'utils/stateHelper';\n\nconst { Option } = Select;\n\nconst QuestionSelector = ({ actions, state }) => {\n  const {\n    questionIndex,\n    type,\n    questions\n  } = getStateInformation(state);\n  return (\n    <Select\n      onChange={index => actions.changeQuestion({ index, type: type.toUpperCase() })}\n      defaultValue={questionIndex}\n      style={{ minWidth: 200 }}\n    >\n      { questions.map((q, i) => <Option key={q.name} value={i}>{q.name}</Option>)}\n    </Select>\n  );\n};\n\nexport default withRouter(connect(\n  (state) => {\n    return {\n      state\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        changeQuestion: ({ index, type }) => dispatch(changeQuestion({ index, type }))\n      }\n    };\n  }\n)(QuestionSelector));\n","export function changeCode({ compiledCode, rawCode, type }) {\n  return {\n    type: `${type}/CODE/CHANGE`,\n    compiledCode,\n    rawCode\n  };\n}\n\nexport function changeQuestion({ index, type }) {\n  return {\n    type: `${type}/QUESTION/CHANGE`,\n    index\n  };\n}\n\nexport function resetQuestion({ type }) {\n  return {\n    type: `${type}/QUESTION/RESET`\n  };\n}\n","import React from 'react';\nimport { Select } from 'antd';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { changeCategory } from 'actions/category';\n\nimport { getCategories } from 'questions/index';\n\nconst categories = getCategories();\nconst { Option } = Select;\n\nconst CategorySelector = ({ actions, index }) => (\n  <Select\n    onChange={actions.changeCategory}\n    defaultValue={index}\n    style={{ minWidth: 200 }}\n  >\n    { categories.map((q, i) => <Option key={q.name} value={i}>{q.name}</Option>)}\n  </Select>\n);\n\nexport default withRouter(connect(\n  (state) => {\n    return {\n      index: state.category.index\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        changeCategory: index => dispatch(changeCategory(index))\n      }\n    };\n  }\n)(CategorySelector));\n","export function changeCategory(index) {\n  return {\n    type: 'CATEGORY/CHANGE',\n    index\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { resetQuestion } from 'actions/code';\n\nimport QuestionSelector from 'components/Selectors/QuestionSelector';\nimport CategorySelector from 'components/Selectors/CategorySelector';\n\nimport { Button } from 'antd';\nimport styles from './ControlPanel.module.scss';\n\nconst ControlPanel = ({ actions, type }) => (\n  <div className={styles.control}>\n    <CategorySelector />\n    <QuestionSelector />\n    <Button type=\"danger\" onClick={() => actions.resetQuestion(type)}>Reset</Button>\n  </div>\n);\n\nexport default withRouter(connect(\n  () => {\n    return {\n\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        resetQuestion: type => dispatch(resetQuestion({ type: type.toUpperCase() }))\n      }\n    };\n  }\n)(ControlPanel));\n","import React from 'react';\nimport styles from './ResultPanel.module.scss';\n\nconst ResultPanel = () => (\n  <div className={styles.result} id=\"result\" />\n);\n\nexport default ResultPanel;\n","import React from 'react';\nimport styles from './AnswerPanel.module.scss';\n\nconst AnswerPanel = () => (\n  <div id=\"answer\" className={styles.answer} />\n);\n\nexport default AnswerPanel;\n","const spy = (obj, methodName) => {\n  const origFn = obj[methodName];\n  let callHistory = [];\n  let calledWith = {};\n\n  const secret = Math.random().toFixed(4) + '';\n  obj[methodName] = (...args) => {\n    const result = origFn.apply(obj, args);\n    callHistory.push(args);\n    calledWith[args.join(secret)] = true;\n    return result;\n  };\n  return {\n    calledWith: (...args) => !!calledWith[args.join(secret)],\n    callCount: () => callHistory.length,\n    restore: () => (obj[methodName] = origFn)\n  };\n};\n\nexport default spy;\n","import { createHarness } from 'tape';\n\nconst tryCatchPatch = t => (description, testBlock) => {\n  try {\n    t.comment(description);\n    testBlock(t);\n  } catch (e) {\n    t.fail(e);\n  }\n};\n\nconst combinePatch = (tape, patches) => (...args) => {\n  const [cb] = args.slice(-1);\n  if (typeof cb !== 'function') {\n    throw new Error('should provide callback');\n  }\n  tape(...args.slice(0, -1), (t) => {\n    for (let key in patches) {\n      t[key] = patches[key](t);\n    }\n    try {\n      cb(t);\n    } catch (e) {\n      t.fail(e);\n    }\n  });\n};\n\nconst getPatchedTape = (onUpdate) => {\n  const harness = createHarness();\n  const stream = harness.createStream({ objectMode: true });\n  stream.on('data', onUpdate);\n  return combinePatch(harness, {\n    subtest: tryCatchPatch,\n    should: tryCatchPatch\n  });\n};\n\nexport default getPatchedTape ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport sinon from 'sinon';\nimport vm from 'vm';\nimport spy from './spy';\nimport getPatchedTape from './tape';\n\nconst wrapCode = (code = '') => {\n  return code.replace(/for *\\(.*\\{|while *\\(.*\\{|do *\\{/g, (loopHead) => {\n    return `let count = 0;\n      const detector = (c) => {\n        if (c > 100000) {\n          throw new Error('infinite');\n        }\n      }\n      ${loopHead}\n      detector(count++);\n    `;\n  });\n};\n\nconst runCode = ({ code, wrappedConsole, onTapeUpdate }) => {\n  let script = null;\n  let context = null;\n  const clock = sinon.useFakeTimers();\n  let test = null;\n  if (onTapeUpdate) {\n    test = getPatchedTape(onTapeUpdate);\n  }\n  // should hijack setTimeout before pass to sandbox\n  const sandbox = {\n    setTimeout: window.setTimeout, // need to be passed also...\n    console: wrappedConsole,\n    sinon,\n    describe: test,\n    test,\n    clock,\n    spy,\n    React,\n    ReactDOM,\n    root: document.getElementById('result'),\n    answer: document.getElementById('answer')\n  };\n  try {\n    script = new vm.Script(wrapCode(code));\n    // eslint-disable-next-line\n    context = new vm.createContext(sandbox);\n    script.runInContext(context);\n  } catch (e) {\n    script = new vm.Script(wrapCode(''));\n    // eslint-disable-next-line\n    context = new vm.createContext(sandbox);\n    script.runInContext(context);\n    wrappedConsole.log(e);\n  }\n  clock.restore();\n};\n\n// const debouncedRunCode = _.debounce(runCode, 200);\n\nexport default runCode;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport Grid from 'components/Grid';\nimport GridItem from 'components/Grid/GridItem';\nimport ConsolePanel from 'components/Panel/ConsolePanel';\nimport CodePanel from 'components/Panel/CodePanel';\nimport ControlPanel from 'components/Panel/ControlPanel';\nimport ResultPanel from 'components/Panel/ResultPanel';\nimport AnswerPanel from 'components/Panel/AnswerPanel';\n\nimport { resetConsole } from 'actions/console';\n\nimport { getStateInformation } from 'utils/stateHelper';\nimport debouncedRunCode from 'utils/runCode';\n\nimport 'components/Pages/ReactPage/ReactPage.css';\n\n\nclass ReactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n  }\n\n  componentDidMount() {\n    const { compiledCode, wrappedConsole, actions } = this.props;\n    actions.resetConsole();\n    debouncedRunCode({ code: compiledCode, wrappedConsole });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { compiledCode: previousCompiledCode } = this.props;\n    const { compiledCode, wrappedConsole, actions } = nextProps;\n    if (previousCompiledCode !== compiledCode) {\n      actions.resetConsole();\n      debouncedRunCode({ code: compiledCode, wrappedConsole });\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      code,\n      handleCodeChange,\n      console: _console\n    } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'answer', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'result', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'console', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className=\"App\">\n        <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n          <GridItem key=\"code\">\n            <CodePanel\n              handleCodeChange={handleCodeChange}\n              data={code}\n              mode=\"jsx\"\n              theme=\"monokai\"\n            />\n          </GridItem>\n          <GridItem key=\"answer\">\n            <AnswerPanel />\n          </GridItem>\n          <GridItem key=\"control\">\n            <ControlPanel type=\"react\" />\n          </GridItem>\n          <GridItem key=\"result\">\n            <ResultPanel />\n          </GridItem>\n          <GridItem key=\"console\">\n            <ConsolePanel className=\"bottom-panel\" data={_console} />\n          </GridItem>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => {\n    const { code, questionIndex, compiledCode } = getStateInformation(state);\n    return {\n      compiledCode,\n      questionIndex,\n      code,\n      console: state.console\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        resetConsole: () => dispatch(resetConsole())\n      }\n    };\n  }\n)(ReactPage));\n","export function resetConsole() {\n  return {\n    type: 'CONSOLE/RESET'\n  };\n}\n\nexport function addConsole(key, ...args) {\n  return {\n    type: 'CONSOLE/ADD',\n    key,\n    args: [...args]\n  };\n}","import React from 'react';\nimport AceEditor from 'react-ace';\nimport styles from './TestPanel.module.scss';\n\nconst TestPanel = ({ data }) => (\n  <div\n    className={`${styles['test-panel']}`}\n  >\n    <AceEditor\n      showPrintMargin={false}\n      mode=\"javascript\"\n      theme=\"textmate\"\n      value={data}\n      readOnly\n      tabSize={2}\n    />\n  </div>\n);\n\nexport default TestPanel;\n","import React from 'react';\nimport styles from './TapePanel.module.scss';\n\nconst TestRow = row => (\n  <div className={styles.test}>\n    { row.name }\n  </div>\n);\n\nconst AssertRow = (row) => {\n  const actual = typeof row.actual === 'object' ? JSON.stringify(row.actual) : `${row.actual}`;\n  const expected = typeof row.expected === 'object' ? JSON.stringify(row.expected) : `${row.expected}`;\n  return (\n    <div className={`${styles.assert} ${row.ok ? styles.ok : styles.fail}`}>\n      <div className={row.ok ? styles.ok : styles.fail}>{row.ok ? 'OK' : 'FAIL'}</div>\n      { row.name ? <div className={styles.name}>{ `${row.name}` }</div> : null }\n      {\n        !row.ok\n          ? (\n            <>\n              <div className={styles.actual}>{ actual }</div>\n              <div className={styles['not-equal']}>!=</div>\n              <div className={styles.expected}>{ expected }</div>\n              {\n                typeof row.actual === 'string' && typeof row.expected === 'string'\n                  ? (\n                    <div className={styles.diff}>\n                      <span className={styles.expected}>{ expected }</span>\n                      <span className={styles.actual}>{ actual }</span>\n                    </div>\n                  )\n                  : null\n              }\n            </>\n          )\n          : null\n      }\n    </div>\n  );\n};\n\n// TODO: add endrow component\nconst EndRow = row => (\n  <div>\n    { JSON.stringify(row) }\n  </div>\n);\n\nconst DescriptionRow = ({ description }) => (\n  <div className={styles.description}>\n    { description }\n  </div>\n);\n\nconst getRow = (row) => {\n  switch (row.type) {\n    case 'test':\n      return <TestRow key={JSON.stringify(row)} {...row} />;\n    case 'assert':\n      return <AssertRow key={JSON.stringify(row)} {...row} />;\n    case 'end':\n      return <EndRow key={JSON.stringify(row)} {...row} />;\n    case undefined && typeof row === 'string':\n      return <DescriptionRow description={row} key={row} />;\n    default:\n      return null;\n  }\n};\n\nconst TapePanel = ({ data }) => (\n  <div className={styles.tape}>{ data.map(getRow) }</div>\n);\n\nexport default TapePanel;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport Grid from 'components/Grid';\nimport GridItem from 'components/Grid/GridItem';\nimport ConsolePanel from 'components/Panel/ConsolePanel';\nimport CodePanel from 'components/Panel/CodePanel';\nimport TestPanel from 'components/Panel/TestPanel';\nimport TapePanel from 'components/Panel/TapePanel';\nimport ControlPanel from 'components/Panel/ControlPanel';\n\nimport { addTape, resetTape } from 'actions/tape';\nimport { resetConsole } from 'actions/console';\n\nimport { getQuestions } from 'questions/index';\n\nimport debouncedRunCode from 'utils/runCode';\nimport { getStateInformation } from 'utils/stateHelper';\n\nimport './JavaScriptPage.css';\n\nconst questions = getQuestions('javascript');\n\nclass JavaScriptPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n  }\n\n  componentDidMount() {\n    const { compiledCode, wrappedConsole, actions } = this.props;\n    actions.resetConsole();\n    debouncedRunCode({ code: compiledCode, wrappedConsole, onTapeUpdate: actions.addTape });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { compiledCode: previousCompiledCode } = this.props;\n    const { compiledCode, wrappedConsole, actions } = nextProps;\n    if (previousCompiledCode !== compiledCode) {\n      actions.resetConsole();\n      actions.resetTape();\n      debouncedRunCode({ code: compiledCode, wrappedConsole, onTapeUpdate: actions.addTape });\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      code,\n      questionIndex,\n      handleCodeChange,\n      tape,\n      console: _console\n    } = this.props;\n    const { test } = questions[questionIndex];\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'tape', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'console', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className=\"App\">\n        <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n          <GridItem key=\"code\">\n            <CodePanel\n              handleCodeChange={handleCodeChange}\n              data={code}\n              mode=\"javascript\"\n              theme=\"monokai\"\n            />\n          </GridItem>\n          <GridItem key=\"test\">\n            <TestPanel data={test} />\n          </GridItem>\n          <GridItem key=\"control\">\n            <ControlPanel type=\"javascript\" />\n          </GridItem>\n          <GridItem key=\"tape\">\n            <TapePanel data={tape} />\n          </GridItem>\n          <GridItem key=\"console\">\n            <ConsolePanel className=\"bottom-panel\" data={_console} />\n          </GridItem>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => {\n    const { code, questionIndex, compiledCode } = getStateInformation(state);\n    return {\n      compiledCode,\n      questionIndex,\n      code,\n      tape: state.tape,\n      console: state.console\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        resetTape: () => dispatch(resetTape()),\n        addTape: data => dispatch(addTape(data)),\n        resetConsole: () => dispatch(resetConsole())\n      }\n    };\n  }\n)(JavaScriptPage));\n","export function resetTape() {\n  return {\n    type: 'TAPE/RESET'\n  };\n}\n\nexport function addTape(data) {\n  return {\n    type: 'TAPE/ADD',\n    data\n  };\n}\n","const createWrappedConsole = (console, dispatch) => {\n  return Object.keys(console).reduce((cal, key) => {\n    const newCal = { ...cal };\n    newCal[key] = (...args) => {\n      dispatch({ type: 'CONSOLE/ADD', key, args: [...args] });\n    };\n    return newCal;\n  }, {});\n};\n\nexport default createWrappedConsole;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { transform } from '@babel/standalone';\n\nimport ReactPage from 'components/Pages/ReactPage';\nimport JavaScriptPage from 'components/Pages/JavaScriptPage';\n\nimport { changeCode } from 'actions/code';\n\nimport createWrappedConsole from 'utils/consoleFactory';\nimport { getStateInformation } from 'utils/stateHelper';\n\nconst getPageComponent = (args) => {\n  switch (args.index) {\n    case 1: {\n      return <ReactPage {...args} />;\n    }\n    default: {\n      return <JavaScriptPage {...args} />;\n    }\n  }\n};\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    const { actions } = this.props;\n    const { _dispatch: dispatch } = actions;\n    this.wrappedConsole = createWrappedConsole(console, dispatch);\n  }\n\n  componentDidMount() {\n    const { state, history } = this.props;\n    if (!state.login.isLogin) {\n      history.push('/login');\n      return;\n    }\n    const { code } = getStateInformation(state);\n    this.handleCodeChange(code);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { state: previousState } = prevProps;\n    const { state } = this.props;\n    const { categoryIndex: previousCategoryIndex } = getStateInformation(previousState);\n    const { categoryIndex, code } = getStateInformation(state);\n    if (previousCategoryIndex !== categoryIndex) {\n      this.handleCodeChange(code);\n    }\n  }\n\n  handleCodeChange = (newCode) => {\n    const { actions, state } = this.props;\n    const { question, type } = getStateInformation(state);\n    const fullCode = `${newCode} ${question.test}`;\n    try {\n      const { code } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      actions.changeCode({ compiledCode: code, rawCode: newCode, type });\n    } catch (e) {\n      actions.changeCode({ rawCode: newCode, type });\n    }\n  }\n\n  render() {\n    const { state } = this.props;\n    const { handleCodeChange, wrappedConsole } = this;\n    return (\n      <React.Fragment>\n        { getPageComponent({ index: state.category.index, handleCodeChange, wrappedConsole }) }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => {\n    return {\n      state\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        changeCode: args => dispatch(changeCode({ ...args, type: (args.type || 'javascript').toUpperCase() })),\n        _dispatch: dispatch\n      }\n    };\n  }\n)(Page));\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport LoginPage from 'components/Pages/LoginPage';\nimport Page from 'components/Pages/Page';\n\nconst { PUBLIC_URL } = process.env;\n\nconst App = () => (\n  <Router basename={PUBLIC_URL}>\n    <div>\n      <Route exact path=\"/\" component={Page} />\n      <Route exact path=\"/login\" component={LoginPage} />\n    </div>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport 'antd/dist/antd.css';\nimport reducer from './reducers';\nimport App from './App';\nimport './index.css';\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__2gscU\",\"item\":\"Grid_item__2isy5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"Border_border__D0SXZ\",\"vertical\":\"Border_vertical__3GCpR\",\"horizontal\":\"Border_horizontal__1-Vxt\"};"],"sourceRoot":""}