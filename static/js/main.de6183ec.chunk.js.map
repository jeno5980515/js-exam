{"version":3,"sources":["app/pages/LoginPage/LoginPage.module.scss","app/components/Widgets/TapeWidget/TapeWidget.module.scss","app/components/Widgets/CodeWidget/CodeWidget.module.scss","app/components/Widgets/ControlWidget/ControlWidget.module.scss","app/components/Widgets/ResultWidget/ResultWidget.module.scss","app/components/Widgets/AnswerWidget/AnswerWidget.module.scss","app/pages/ExamPage/ReactPage/ReactPage.module.scss","app/components/Widgets/TestWidget/TestWidget.module.scss","app/pages/ExamPage/JavaScriptPage/JavaScriptPage.module.scss","app/utils/sentry.js","app/reducers/javascript.js","app/reducers/react.js","app/reducers/login.js","app/utils/authLogin.js","app/reducers/category.js","app/reducers/tape.js","app/reducers/console.js","app/reducers/index.js","app/pages/LoginPage/index.js","app/actions/login.js","app/utils/consoleFactory.js","app/questions/index.js","app/questions/javascript.js","app/questions/react.js","app/utils/stateHelper.js","app/components/Border/index.js","app/components/Grid/index.js","app/components/Grid/GridItem.js","app/components/Widgets/ConsoleWidget/index.js","app/components/Widgets/CodeWidget/index.js","app/components/Selectors/QuestionSelector/index.js","app/actions/code.js","app/components/Selectors/CategorySelector/index.js","app/actions/category.js","app/components/Widgets/ControlWidget/index.js","app/components/Widgets/ResultWidget/index.js","app/components/Widgets/AnswerWidget/index.js","app/utils/spy.js","app/utils/tape.js","app/utils/runCode.js","app/pages/ExamPage/ReactPage/index.js","app/actions/console.js","app/components/Widgets/TestWidget/index.js","app/components/Widgets/TapeWidget/index.js","app/pages/ExamPage/JavaScriptPage/index.js","app/actions/tape.js","app/pages/ExamPage/index.js","App.js","index.js","app/components/Grid/Grid.module.scss","app/components/Border/Border.module.scss","app/components/Widgets/ConsoleWidget/ConsoleWidget.module.scss"],"names":["module","exports","login","login-input","error","tape","test","description","assert","name","actual","not-equal","expected","ok","fail","diff","code","ace_layer","control","result","answer","app","test-widget","Sentry","dsn","state","arguments","length","undefined","index","action","type","Object","objectSpread","defineProperty","compiledCode","rawCode","s","isLogin","password","concat","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","slice","category","toConsumableArray","data","Console","key","args","reducer","combineReducers","javascript","react","console","_console","LoginPage","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmit","e","actions","preventDefault","submitPassword","_this$props","history","push","_this2","react_default","a","createElement","className","styles","style","display","input","placeholder","onChange","setState","target","value","width","marginRight","es_button","htmlType","React","Component","withRouter","connect","dispatch","createWrappedConsole","keys","reduce","cal","newCal","_len","Array","_key","Questions","content","getCategories","map","getQuestions","categories","getStateInformation","categoryIndex","questionIndex","questions","question","_state$type","Border","allowWidth","allowHeight","disabled","borderSize","ref","createRef","resize","bind","assertThisInitialized","startResize","endResize","_this$props2","height","onUpdate","maxHeight","maxWidth","minWidth","minHeight","newHeight","clientY","current","offsetTop","newWidth","clientX","offsetLeft","window","removeEventListener","dispatchEvent","Event","contains","addEventListener","_this$props3","children","finalClassName","border","horizontal","paddingRight","vertical","paddingBottom","onMouseDown","Grid","onResize","updateFullState","_this$ref$current","totalWidth","clientWidth","totalHeight","clientHeight","newData","column","indexOfColumn","item","indexOfItem","sumOfWidth","c","val","sumOfHeight","updateGridState","_ref","_this$ref$current2","layout","columns","x","sort","b","y","autoResize","grid","Math","max","apply","min","finalWidth","components_Border","_ref2","w","JSON","stringify","itemInData","itemInColumns","isDisabled","static","_ref3","h","find","_ref4","GridItem","Text","text","Fragment","trim","ConsoleWidget","stack","message","ConsoleWidget_Text","CodeWidget","handleCodeChange","mode","theme","lib_default","showPrintMargin","tabSize","debounceChangePeriod","Option","Select","changeQuestion","_getStateInformation","es_select","toUpperCase","defaultValue","q","i","changeCategory","CategorySelector_Option","resetQuestion","Selectors_CategorySelector","Selectors_QuestionSelector","onClick","ResultWidget","id","AnswerWidget","spy","obj","methodName","origFn","callHistory","calledWith","secret","random","toFixed","join","_len2","_key2","callCount","restore","tryCatchPatch","t","testBlock","comment","getPatchedTape","patches","harness","createHarness","createStream","objectMode","on","subtest","should","_args$slice","cb","slicedToArray","Error","wrapCode","replace","loopHead","runCode","wrappedConsole","onTapeUpdate","script","context","clock","sinon","useFakeTimers","sandbox","setTimeout","describe","ReactDOM","root","document","getElementById","renderToString","vm","Script","createContext","runInContext","log","ReactPage","controlHeight","resetConsole","debouncedRunCode","nextProps","previousCompiledCode","innerWidth","innerHeight","Grid_Grid","Grid_GridItem","Widgets_CodeWidget","Widgets_AnswerWidget","Widgets_ControlWidget","Widgets_ResultWidget","Widgets_ConsoleWidget","TestWidget","readOnly","TestRow","row","AssertRow","EndRow","DescriptionRow","getRow","TapeWidget_TestRow","assign","TapeWidget_AssertRow","TapeWidget_EndRow","TapeWidget_DescriptionRow","TapeWidget","JavaScriptPage","addTape","resetTape","Widgets_TestWidget","Widgets_TapeWidget","Page","newCode","fullCode","transform","presets","decoratorsBeforeExport","plugins","changeCode","_dispatch","prevProps","previousState","previousCategoryIndex","_getStateInformation4","ExamPage_ReactPage","ExamPage_JavaScriptPage","getPageComponent","App","BrowserRouter","basename","process","Route","exact","path","component","ExamPage","onerror","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","render","es","src_App","console-widget"],"mappings":"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","file":"static/js/main.de6183ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginPage_login__3CEIp\",\"login-input\":\"LoginPage_login-input__1mxMC\",\"error\":\"LoginPage_error__14Fgl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tape\":\"TapeWidget_tape__sW2EX\",\"test\":\"TapeWidget_test__31LA9\",\"description\":\"TapeWidget_description__qG1mD\",\"assert\":\"TapeWidget_assert__90jGU\",\"name\":\"TapeWidget_name__HpBAN\",\"actual\":\"TapeWidget_actual__1Te-y\",\"not-equal\":\"TapeWidget_not-equal__20AYj\",\"expected\":\"TapeWidget_expected__13UPN\",\"ok\":\"TapeWidget_ok__1CKis\",\"fail\":\"TapeWidget_fail__3HJOA\",\"diff\":\"TapeWidget_diff__2Lnff\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"CodeWidget_code__1J4Bi\",\"ace_layer\":\"CodeWidget_ace_layer__y0on9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlWidget_control__3uNJC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"ResultWidget_result__32Thz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answer\":\"AnswerWidget_answer__CQDaR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ReactPage_app__sTFGU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test-widget\":\"TestWidget_test-widget__3VAAj\",\"ace_layer\":\"TestWidget_ace_layer__1JA5b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"JavaScriptPage_app__DvRbu\"};","import * as Sentry from '@sentry/browser';\n\nSentry.init({\n  dsn: 'https://466d7a4e8d174006b5449330cc18e4cc@sentry.io/1323316'\n});\n\nconst initErrorLogging = () => {\n  window.onerror = (e) => {\n    Sentry.captureException(e);\n  };\n};\n\nexport {\n  initErrorLogging\n};\n","const code = (state = { index: 0 }, action) => {\n  switch (action.type) {\n    case 'JAVASCRIPT/CODE/RESET':\n      return state;\n    case 'JAVASCRIPT/CODE/CHANGE':\n      return {\n        ...state,\n        compiledCode: action.compiledCode || state.compiledCode,\n        [state.index]: {\n          code: action.rawCode\n        }\n      };\n    case 'JAVASCRIPT/QUESTION/RESET':\n      return {\n        ...state,\n        [state.index]: {\n          code: ''\n        }\n      };\n    case 'JAVASCRIPT/QUESTION/CHANGE':\n      return {\n        ...state,\n        index: action.index,\n        compiledCode: ''\n      };\n    default:\n      return state;\n  }\n};\n\nexport default code;\n","const code = (state = { index: 0 }, action) => {\n  switch (action.type) {\n    case 'REACT/CODE/RESET':\n      return state;\n    case 'REACT/CODE/CHANGE':\n      return {\n        ...state,\n        compiledCode: action.compiledCode || state.compiledCode,\n        [state.index]: {\n          code: action.rawCode\n        }\n      };\n    case 'REACT/QUESTION/RESET':\n      return {\n        ...state,\n        compiledCode: '',\n        [state.index]: {\n          code: ''\n        }\n      };\n    case 'REACT/QUESTION/CHANGE':\n      return {\n        ...state,\n        index: action.index,\n        compiledCode: ''\n      };\n    default:\n      return state;\n  }\n};\n\nexport default code;\n","import { authLogin } from '../utils/authLogin';\n\nconst login = (state = { isLogin: false }, action) => {\n  switch (action.type) {\n    case 'LOGIN/LOGIN': {\n      return { isLogin: authLogin(action.password) };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default login;\n","const authLogin = s => `${(new Date().getUTCFullYear() + 1) * (new Date().getUTCMonth() + 1) * (new Date().getUTCDate() + 1) * (new Date().getUTCHours() + 1)}`.slice(0, 4) === s;\n\nexport {\n  authLogin\n}","const category = (state = { index: 0 }, action) => {\n  switch (action.type) {\n    case 'CATEGORY/RESET':\n      return { index: 0 };\n    case 'CATEGORY/CHANGE':\n      return {\n        ...state,\n        index: action.index\n      };\n    default:\n      return state;\n  }\n};\n\nexport default category;\n","const tape = (state = [], action) => {\n  switch (action.type) {\n    case 'TAPE/RESET': {\n      return [];\n    }\n    case 'TAPE/ADD': {\n      return [...state, action.data];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tape;\n","const Console = (state = [], action) => {\n  switch (action.type) {\n    case 'CONSOLE/RESET':\n      return [];\n    case 'CONSOLE/ADD':\n      return [\n        ...state,\n        {\n          key: action.key,\n          args: action.args\n        }\n      ];\n    default:\n      return state;\n  }\n};\n\nexport default Console;\n","import { combineReducers } from 'redux';\nimport javascript from './javascript';\nimport react from './react';\nimport login from './login';\nimport category from './category';\nimport tape from './tape';\nimport _console from './console';\n\nconst reducer = combineReducers({\n  javascript,\n  react,\n  login,\n  category,\n  tape,\n  console: _console\n});\n\nexport default reducer;\n","import React from 'react';\nimport { Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { submitPassword } from 'app/actions/login';\nimport styles from './LoginPage.module.scss';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { password: '', error: '' };\n  }\n\n  componentDidUpdate() {\n    const { isLogin, history } = this.props;\n    if (isLogin) {\n      history.push('/');\n    }\n  }\n\n  onSubmit = (e) => {\n    const { password } = this.state;\n    const { actions } = this.props;\n    e.preventDefault();\n    actions.submitPassword(password);\n  }\n\n  render() {\n    const { error } = this.state;\n    return (\n      <div className={styles.login}>\n        <form onSubmit={this.onSubmit}>\n          <div style={{ display: 'flex' }}>\n            <Input\n              placeholder=\"input the password to login\"\n              onChange={e => this.setState({ password: e.target.value })}\n              style={{ width: 200, marginRight: 5 }}\n            />\n            <Button type=\"primary\" htmlType=\"submit\">Login</Button>\n          </div>\n        </form>\n        <div className={styles.error}>{ error }</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => {\n    return {\n      isLogin: state.login.isLogin\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        submitPassword: password => dispatch(submitPassword(password))\n      }\n    };\n  }\n)(LoginPage));\n","export function submitPassword(password) {\n  return {\n    type: 'LOGIN/LOGIN',\n    password\n  };\n}\n","const createWrappedConsole = (console, dispatch) => {\n  return Object.keys(console).reduce((cal, key) => {\n    const newCal = { ...cal };\n    newCal[key] = (...args) => {\n      dispatch({ type: 'CONSOLE/ADD', key, args: [...args] });\n    };\n    return newCal;\n  }, {});\n};\n\nexport default createWrappedConsole;\n","import javascript from './javascript';\nimport react from './react';\n\nconst Questions = {\n  javascript,\n  react\n};\n\nconst getCategories = () => Object.keys(Questions).map((name) => { return { name }; });\n\nconst getQuestions = type => Questions[type];\n\nexport {\n  getCategories,\n  getQuestions\n};\n","const questionList = [\n  {\n    name: 'countChar',\n    content: `\n/**\n * Implement the function 'countChar'\n * to count the occurance of each character for the input string,\n * and return an object containing those information.\n *\n * For example :\n *  input string: 'abca'\n *\n *  returned object:\n *  {\n *     a: 2,\n *     b: 1,\n *     c: 1\n *  }\n */\n\n/**\n * Implement function body\n */\nfunction countChar(s) {\n\n}\n\n`,\n    test: `\ntest('countChar test', (t) => {\n  t.subtest('should return character count in an object', t => {\n    const result = countChar();\n    t.equal(typeof result, 'object');\n  });\n  t.subtest('should be able to count chars', t => {\n    const input = 'abca';\n    const result = countChar(input);\n    t.equal(result.a, 2);\n    t.equal(result.b, 1);\n  });\n  t.subtest('should be able count some longer string as well', t => {\n    const input = 'The Quick Brown Fox Jumps Over The Lazy Dog';\n    const result = countChar(input);\n    t.equal(result[' '], 8);\n    t.equal(result.T, 2);\n    t.equal(result.o, 3);\n  });\n})\n\n`\n  },\n  {\n    name: 'forEach, map and reduce',\n    content: `\n/**\n * Implement the function 'forEach, map and reduce'\n *\n */\n\n/**\n * Implement function body\n */\nconst myForEach = function (array, callback) {\n\n}\n\nconst myMap = function (array, callback) {\n\n}\n\nconst myReduce = function (array, callback, initValue) {\n\n}\n\n`,\n    test: `\ntest('forEach, map and reduce test', (t) => {\n  t.subtest('should execute forEach correctly', t => {\n    let count = 0;\n    myForEach([1, 2, 3, 4], (val, index) => count += val * index * index);\n    t.equal(count, 50);\n  });\n  t.subtest('should execute map correctly', t => {\n    const result = myMap([1, 2, 3, 4], (val, index) => val * index * index);\n    t.equal(result[0], 0);\n    t.equal(result[2], 12);\n  });\n  t.subtest('should execute reduce correctly', t => {\n    const result = myReduce([10, 2, 3], (cal, val, index) => cal + val * index, 0);\n    t.equal(result, 8);\n  });\n});\n\n`\n  },\n  {\n    name: 'adder',\n    content: `\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *   addTen = adder(10)\n *   addFive = adder(5)\n *\n *   addTen(10)  // return 20\n *   addFive(10) // return 15\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n`,\n    test: `\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should be able to add two numbers', t => {\n    const add5 = adder(5);\n    t.equal(add5(10), 15);\n    t.equal(add5(20), 25);\n\n    t.equal(adder(40)(2), 42);\n  });\n})\n\n`\n  },\n  {\n    name: 'infinite adder',\n    content: `\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *\n *   adder(10)(20)(30).getValue()  // return 60\n *   adder(10)(20)(30)(40).getValue() // return 100\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n`,\n    test: `\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should get default value with 0', t => {\n    t.equal(adder().getValue(), 0);\n  });\n  t.subtest('should be able to add mutiple numbers', t => {\n    t.equal(adder(10).getValue(), 10);\n    t.equal(adder(10)(20)(30).getValue(), 60);\n    t.equal(adder(10)(20)(30)(40).getValue(), 100);\n  });\n})\n\n`\n  },\n  {\n    name: 'default function',\n    content: `\n/**\n * Implement a function 'defaultWith'\n * which behavior is like the following example\n *\n * ex:\n *\n *   const fn = ({ a, b }) => a + b;\n *   const boundFn = defaultWith(fn, { a: 10 });\n *   boundFn({ b: 20 }); // return 30\n*/\n\n/**\n * Implement function body\n */\nfunction defaultWith() {\n}\n\n`,\n    test: `\ntest('defaultWith test', (t) => {\n  t.subtest('should return a function', t => {\n    const fn = () => {};\n    t.equal(typeof defaultWith(fn, {}), 'function');\n  });\n  t.subtest('should get correct result when all parameters are given', t => {\n    const fn = ({ a, b }) => a * 2 + b * 3;\n    const boundFn = defaultWith(fn, { a: 3 });\n    t.equal(boundFn({ b: 4 }), 18);\n  });\n  t.subtest('should get correct result when all parameters are given', t => {\n    const fn = ({ x, y, z }) => x * y * z;\n    const boundFn = defaultWith(fn, { x: 3, y: 4 });\n    t.equal(boundFn({ x: 7, z: 2 }), 56);\n  });\n})\n\n`\n  },\n  {\n    name: 'sequential',\n    content: `\n/**\n * Implement the function 'sequential'\n * to execute async functions in sequence.\n *\n * 'sequential' takes an array of async functions as parameter,\n * and execute each of them after previous one has done.\n */\n\n/**\n * Implement function body\n */\nfunction sequential(tasks = []) {\n\n}\n\n`,\n    test: `\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('sequential test', (t) => {\n  const log = spy(console, 'log');\n  sequential(tasks);\n  t.equal(log.callCount(), 0);\n  clock.tick(600);\n  t.equal(log.callCount(), 1);\n  t.ok(log.calledWith('task 1 done'));\n  clock.tick(600);\n  t.equal(log.callCount(), 3);\n  t.ok(log.calledWith('task 3 done'));\n});\n\n    `\n  },\n  {\n    name: 'parallel',\n    content: `\n/**\n * Implement the function 'parallel'\n * to execute async functions at once.\n *\n * 'parallel' takes an array of async functions as parameter,\n * and execute each of them in the same time.\n *\n */\n\n/**\n * Implement function body\n */\nfunction parallel(tasks = [], callback) {\n}\n\n`,\n    test: `\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('parallel test', t => {\n  t.subtest('should run all tasks at once', t => {\n    const spyLog = spy(console, 'log');\n    parallel(tasks, (result) => { /* do nothing */ });\n    t.equal(spyLog.callCount(), 0);\n    clock.tick(600);\n    t.equal(spyLog.callCount(), 3);\n  });\n\n  t.subtest('should get task result in an array', t => {\n    let obj = {};\n    parallel(tasks, (result) => {\n      obj.result = result;\n    });\n    clock.tick(600);\n    t.deepEqual(obj.result, [1, 2, 3]);\n  });\n\n  t.subtest('should trigger callback only once', t => {\n    let count = 0;\n    const callback = () => count++;\n\n    parallel(tasks, callback);\n    clock.tick(300);\n    t.equal(count, 0);\n    clock.tick(600);\n    t.equal(count, 1);\n  });\n});\n\n`\n  },\n  {\n    name: 'combineReducers',\n    content: `\n// http://redux.js.org/docs/api/combineReducers.html\nfunction combineReducers(reducers) {\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nfunction calledCount(state = 0, action) {\n  if(action.type == 'CALL') {\n    return state + 1;\n  }\n  return state;\n}\n\n`,\n    test: `\ntest('combineReducers', t => {\n  const reducer = combineReducers({\n    calc: calc,\n    calls: calledCount,\n  });\n\n  t.subtest('should init states', t => {\n    let state = {};\n    state = reducer(state, {type: ''});\n    t.equal(state.calc, 0);\n    t.equal(state.calls, 0);\n  });\n\n  t.subtest('should handle actions', t => {\n    let state = {};\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 1);\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 2);\n  });\n})\n`\n  },\n  {\n    name: 'applyMiddleware',\n    content: `\n// http://redux.js.org/docs/api/applyMiddleware.html\n\nfunction applyMiddleware(...middlewares) {\n  return createStore => (...args) => {\n    const store = createStore(...args);\n    let dispatch = store.dispatch;\n    /**************************\n     implement              here\n     **************************/\n\n\n\n\n    /***************************/\n    return Object.assign(store, { dispatch })\n  }\n}\n\n`,\n    test: `\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  if (typeof enhancer !== 'undefined') {\n    return enhancer(createStore)(reducer, preloadedState)\n  }\n\n  let currentReducer = reducer;\n  let currentState = preloadedState;\n\n  function getState() {\n    return currentState;\n  }\n\n  function dispatch(action) {\n    currentState = currentReducer(currentState, action);\n  }\n\n  dispatch({ type: '@@INIT' });\n\n  return {\n    dispatch,\n    getState\n  };\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst thunk = ({ getState, dispatch }) => next => action => {\n  if (typeof action === 'function') {\n    return action(dispatch, getState);\n  }\n  return next(action);\n}\n\ntest('applyMiddleware test', t => {\n\n  t.subtest('should execute normal action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute function action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n\n  t.subtest('should apply mutiple middlewares in the right order', t => {\n    let logCount = 1;\n    const log = () => next => action => {\n      logCount += 1;\n      next(action);\n    }\n    const log2 = () => next => action => {\n      logCount *= 2;\n      next(action);\n    }\n    const store = createStore(calc, 0, applyMiddleware(log, log2));\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(logCount, 22);\n  });\n})\n`\n  },\n  {\n    name: 'createStore',\n    content: `\n// http://redux.js.org/docs/api/createStore.html\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  function getState() {\n\n  }\n\n  function subscribe(listener) {\n\n  }\n\n  function dispatch(action) {\n\n  }\n\n  dispatch({ type: '@@INIT' })\n\n  return {\n    dispatch,\n    subscribe,\n    getState\n  }\n}\n\n\n`,\n    test: `\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst wrappedThunk = (createStore) => {\n  return function (...args) {\n    const store = createStore(...args);\n    const { dispatch, getState } = store;\n    store.dispatch = (action) => {\n      if (typeof action === 'function') {\n        return action(dispatch, getState);\n      }\n      dispatch(action);\n    }\n    return store;\n  }\n}\n\ntest('createStore test', t => {\n\n  t.subtest('should execute getState successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n  });\n\n  t.subtest('should execute dispatch successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute subscribe and unsubscribe successfully', t => {\n    const store = createStore(calc, 0);\n    let dispatchCount = 1;\n    let dispatchCount2 = 3;\n    const unsubscribeForCount = store.subscribe(() => dispatchCount *= 2);\n    const unsubscribeForCount2 = store.subscribe(() => dispatchCount2 *= 2);\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n    t.equal(dispatchCount2, 24);\n    unsubscribeForCount();\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    unsubscribeForCount2();\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n    t.equal(dispatchCount2, 96);\n  });\n\n  t.subtest('should execute enhancer successfully', t => {\n    const store = createStore(calc, 0, wrappedThunk);\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n})\n`\n  },\n  {\n    name: 'explain',\n    content: `\n// explain the purpose of following code;\n// modify variable name and/or code style when appropriate;\n// add comments where you see fit\nfunction foo(a, b) {\n  var c = [];\n  for(var i0 = 0, i1 = 0; i0 < a.length && i1 < b.length; ) {\n    if(a[i0] < b[i1]) {\n      c.push(a[i0++]);\n    }\n    if(a[i0] >= b[i1]) {\n      c.push(b[i1++]);\n    }\n  }\n  if(i0 < a.length) {\n    for(var i = i0; i < a.length; i++) {\n      c.push(a[i]);\n    }\n  }\n  if(i1 < b.length) {\n    for(var i = i1; i < b.length; i++) {\n      c.push(b[i]);\n    }\n  }\n  return c;\n}\n\nconsole.log(foo([1,4,5], [2,3,6]))\n`\n  },\n  {\n    name: 'mergeSort',\n    content: `\n// implement function merge, so mergeSort can run correctly\nfunction merge(arr1, arr2) {\n  // TODO enter your code here\n  return arr1;\n}\n\nfunction mergeSort(arr) {\n  if(arr.length <= 1) {\n    return arr;\n  }\n  const mid = Math.floor(arr.length / 2);\n  const sortedArr1 = mergeSort(arr.slice(0, mid));\n  const sortedArr2 = mergeSort(arr.slice(mid));\n  return merge(sortedArr1, sortedArr2);\n}\n\n`,\n    test: `\ntest('mergeSort', t => {\n  t.deepEqual(mergeSort([6,3,5,10,2,100,4,1]),[1,2,3,4,5,6,10,100]);\n  const randomNumbers = Array.from({length: 20})\n    .map(() => Math.floor(Math.random() * 100));\n  const sorted = randomNumbers.slice(0).sort((a, b) => a - b);\n  t.deepEqual(mergeSort(randomNumbers), sorted);\n})\n`\n  },\n];\n\nexport default questionList;\n","const questionList = [\n  {\n    name: 'Search',\n    content: `\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n      </div>\n    );\n  }\n}\n\nconst search = (query) => new Promise((resolve, reject) => {\n  const result = DATA.filter(({ name }) => name.includes(query.toLowerCase()));\n  if (result.length !== 0) {\n    resolve(result);\n  } else {\n    reject(new Error('not found'));\n  }\n});\n\nconst Item = ({ name, price }) => (\n  <div>\n    { name }: { price }$ \n  </div>\n);\n\nconst DATA = [\n  {\n    name: 'apple',\n    price: 10,\n    id: 1\n  },\n  {\n    name: 'orange',\n    price: 15,\n    id: 2\n  },\n  {\n    name: 'banana',\n    price: 7,\n    id: 3\n  },\n]\n\n`,\n    test: `\nclass AnswerApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '', data: [] };\n  }\n  changeValue = async (name) => {\n    this.setState({ value: name });\n    if (name.trim() === '') {\n      this.setState({ data: [] });\n      return;\n    }\n    try {\n      const result = await search(name);\n      this.setState({ data: result });\n    } catch (e) {\n      this.setState({ data: [] });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div>Hi, I want to buy { this.state.value }</div>\n        <input onChange={e => this.changeValue(e.target.value)}/>\n        <div>\n          {\n            this.state.data.map(({ price, name, id }) => <Item price={price} name={name} key={id} /> )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <AnswerApp />,\n  answer\n);\n\ntry {\n  renderToString(\n    <App />\n  );\n  ReactDOM.render(\n    <App/>,\n    root\n  )\n} catch (e) {\n  console.log(e)\n}\n\n`\n  },\n];\n\nexport default questionList;\n","import { getQuestions, getCategories } from 'app/questions/index';\n\nconst categories = getCategories();\n\nconst getStateInformation = (state) => {\n  const categoryIndex = state.category.index;\n  const type = categories[categoryIndex].name;\n  const questionIndex = state[type].index;\n  const questions = getQuestions(type);\n  const question = questions[questionIndex];\n  const { index, compiledCode } = state[type];\n  const code = (state[type][index] && state[type][index].code) || questions[questionIndex].content;\n  return {\n    type,\n    categoryIndex,\n    questionIndex,\n    questions,\n    question,\n    code,\n    compiledCode\n  };\n};\n\nexport {\n  getStateInformation\n};\n","import React, { Component } from 'react';\nimport styles from './Border.module.scss';\n\nclass Border extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      allowWidth,\n      allowHeight,\n      disabled,\n      borderSize\n    } = this.props;\n    this.ref = React.createRef();\n    this.resize = this.resize.bind(this);\n    this.startResize = this.startResize.bind(this);\n    this.endResize = this.endResize.bind(this);\n    this.borderSize = borderSize || 10;\n    this.disabled = disabled;\n    this.allowWidth = allowWidth;\n    this.allowHeight = allowHeight;\n    this.style = {};\n  }\n\n  resize(e) {\n    const {\n      allowHeight,\n      height,\n      width,\n      onUpdate,\n      allowWidth,\n      maxHeight,\n      maxWidth,\n      minWidth,\n      minHeight\n    } = this.props;\n    let newHeight = allowHeight\n      ? e.clientY - this.ref.current.offsetTop\n      : height;\n    if (maxHeight && newHeight > maxHeight) {\n      newHeight = maxHeight;\n    }\n    if (minHeight && newHeight < minHeight) {\n      newHeight = minHeight;\n    }\n    let newWidth = allowWidth\n      ? e.clientX - this.ref.current.offsetLeft\n      : width;\n    if (maxWidth && newWidth > maxWidth) {\n      newWidth = maxWidth;\n    }\n    if (minWidth && newWidth < minWidth) {\n      newWidth = minWidth;\n    }\n    onUpdate({\n      width: newWidth,\n      height: newHeight\n    });\n  }\n\n  endResize() {\n    window.removeEventListener('mousemove', this.resize);\n    window.removeEventListener('mouseup', this.endResize);\n    window.dispatchEvent(new Event('resize'));\n  }\n\n  startResize(e) {\n    if (e.target.contains(this.ref.current)) {\n      window.addEventListener('mousemove', this.resize);\n      window.addEventListener('mouseup', this.endResize);\n    }\n  }\n\n\n  render() {\n    const {\n      width,\n      height,\n      disabled,\n      children,\n      className\n    } = this.props;\n    this.style = {\n      ...this.style,\n      width: `${width}px`,\n      height: `${height}px`\n    };\n    let finalClassName = `${styles.border} ${className || ''}`;\n    if (!disabled && this.allowWidth) {\n      finalClassName = `${finalClassName} ${styles.horizontal}`;\n      this.style.paddingRight = `${this.borderSize}px`;\n    }\n    if (!disabled && this.allowHeight) {\n      finalClassName = `${finalClassName} ${styles.vertical}`;\n      this.style.paddingBottom = `${this.borderSize}px`;\n    }\n    return (\n      <div\n        ref={this.ref}\n        className={finalClassName}\n        onMouseDown={!disabled ? this.startResize : null}\n        style={this.style}\n      >\n        { children }\n      </div>\n    );\n  }\n}\n\nexport default Border;\n","import React from 'react';\nimport Border from 'app/components/Border';\nimport styles from './Grid.module.scss';\n\nexport default class Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      layout,\n      borderSize\n    } = this.props;\n    this.ref = React.createRef();\n    this.borderSize = borderSize || 10;\n    this.layout = layout;\n    this.columns = layout\n      .reduce((cal, item) => {\n        const newCal = [...cal];\n        const { x } = item;\n        newCal[x] = [...(newCal[x] || []), item];\n        return newCal;\n      }, [])\n      .map(column => column || [])\n      .map(column => column.sort((a, b) => a.y - b.y));\n\n    this.state = {\n      data: this.columns.map((column) => {\n        return column.map((item) => {\n          return {\n            width: item.width,\n            height: item.height\n          };\n        });\n      })\n    };\n  }\n\n  componentDidMount() {\n    const { autoResize } = this.props;\n    if (autoResize) {\n      window.addEventListener('resize', this.onResize);\n      window.dispatchEvent(new Event('resize'));\n    }\n  }\n\n  componentWillUnmount() {\n    const { autoResize } = this.props;\n    if (autoResize) {\n      window.removeEventListener('resize', this.onResize);\n    }\n  }\n\n  onResize = () => {\n    this.updateFullState();\n  }\n\n  updateFullState = () => {\n    const { clientWidth: totalWidth, clientHeight: totalHeight } = this.ref.current;\n    const { data } = this.state;\n    const newData = data.map((column, indexOfColumn) => {\n      return column.map((item, indexOfItem) => {\n        const sumOfWidth = data\n          .slice(0, -1)\n          .map(c => (c[0] || { width: 0 }))\n          .map(c => c.width)\n          .reduce((cal, val) => cal + val, 0);\n        const sumOfHeight = column\n          .slice(0, -1)\n          .map(c => c.height)\n          .reduce((cal, val) => cal + val, 0);\n        return {\n          width: indexOfColumn === data.length - 1 ? totalWidth - sumOfWidth : item.width,\n          height: indexOfItem === column.length - 1 ? totalHeight - sumOfHeight : item.height\n        };\n      });\n    });\n    this.setState({ data: newData });\n  }\n\n  updateGridState = ({\n    indexOfColumn, indexOfItem, width, height\n  }) => {\n    const { clientWidth: totalWidth, clientHeight: totalHeight } = this.ref.current;\n    const { data } = this.state;\n    const newData = [...data];\n    if (width !== newData[indexOfColumn][0].width) {\n      newData[indexOfColumn] = newData[indexOfColumn]\n        .map((item) => {\n          return {\n            ...item,\n            width\n          };\n        });\n      newData[newData.length - 1] = newData[newData.length - 1].map((item) => {\n        return {\n          ...item,\n          width: totalWidth - width\n        };\n      });\n    } else if (height !== undefined && indexOfColumn !== undefined && indexOfItem !== undefined) {\n      newData[indexOfColumn][indexOfItem].height = height;\n      newData[indexOfColumn][newData[indexOfColumn].length - 1].height = totalHeight - newData[indexOfColumn][indexOfItem].height;\n    }\n    this.setState({ data: newData });\n  }\n\n  render() {\n    const { columns } = this;\n    const { children, totalWidth, totalHeight } = this.props;\n    const { data } = this.state;\n    return (\n      <div\n        className={styles.grid}\n        style={{\n          width: totalWidth,\n          height: totalHeight\n        }}\n        ref={this.ref}\n      >\n        {\n          columns.map((column, indexOfColumn) => {\n            const maxWidth = Math.max(...column.map(item => item.maxWidth || 0));\n            const minWidth = Math.min(...column.map(item => item.minWidth || 999999));\n            const isDisabledForWidth = indexOfColumn === columns.length - 1;\n            const finalWidth = isDisabledForWidth\n              ? data[indexOfColumn][0].width\n              : data[indexOfColumn][0].width + this.borderSize;\n            return (\n              <Border\n                allowWidth\n                borderSize={this.borderSize}\n                width={finalWidth}\n                maxWidth={maxWidth}\n                minWidth={minWidth}\n                onUpdate={({ width: w }) => this.updateGridState({\n                  indexOfColumn,\n                  width: w\n                })}\n                disabled={indexOfColumn === columns.length - 1}\n                key={JSON.stringify(column)}\n              >\n                {\n                  column.map((item, indexOfItem) => {\n                    const itemInData = data[indexOfColumn][indexOfItem];\n                    const itemInColumns = columns[indexOfColumn][indexOfItem];\n                    const isDisabled = indexOfItem === column.length - 1 || itemInColumns.static;\n                    return (\n                      <Border\n                        allowHeight\n                        borderSize={this.borderSize}\n                        width={itemInData.width}\n                        height={itemInData.height}\n                        maxHeight={itemInColumns.maxHeight}\n                        minHeight={itemInColumns.minHeight}\n                        onUpdate={({ width: w, height: h }) => this.updateGridState({\n                          indexOfItem,\n                          indexOfColumn,\n                          width: w,\n                          height: h\n                        })}\n                        disabled={isDisabled}\n                        key={JSON.stringify(item)}\n                      >\n                        { children.find(({ key }) => key === item.key) }\n                      </Border>\n                    );\n                  })\n                }\n              </Border>\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport styles from './Grid.module.scss';\n\nconst GridItem = ({ children }) => (\n  <div className={styles.item}>\n    { children }\n  </div>\n);\n\nexport default GridItem;\n","import React from 'react';\nimport styles from './ConsoleWidget.module.scss';\n\nconst isError = e => e && e.stack && e.message && typeof e.stack === 'string' && typeof e.message === 'string';\n\nconst Text = ({ text }) => <>{ `${text}`.trim() === '' ? <br /> : `${text}`.trim() }</>;\n\nconst ConsoleWidget = ({ data, className }) => (\n  <div className={`${styles['console-widget']} ${className || ''}`}>\n    Console:\n    {\n      data.map(({ args }) => (\n        <div className={styles.console} key={args}>\n          {\n            args.map((text, index) => (\n              <div className={styles.text} key={index}>\n                {\n                  typeof text === 'object' && !isError(text)\n                    ? JSON.stringify(text, null, 2)\n                    : <Text text={text} />\n                }\n              </div>\n            ))\n          }\n        </div>\n      ))\n    }\n  </div>\n);\n\nexport default ConsoleWidget;\n","import React from 'react';\nimport AceEditor from 'react-ace';\n\nimport styles from './CodeWidget.module.scss';\n\nconst CodeWidget = ({\n  handleCodeChange,\n  data,\n  mode,\n  theme\n}) => (\n  <AceEditor\n    className={styles.code}\n    showPrintMargin={false}\n    mode={mode}\n    theme={theme}\n    onChange={handleCodeChange}\n    value={data}\n    tabSize={2}\n    debounceChangePeriod={800}\n  />\n);\n\nexport default CodeWidget;\n","import React from 'react';\nimport { Select } from 'antd';\n\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { changeQuestion } from 'app/actions/code';\n\nimport { getStateInformation } from 'app/utils/stateHelper';\n\nconst { Option } = Select;\n\nconst QuestionSelector = ({ actions, state }) => {\n  const {\n    questionIndex,\n    type,\n    questions\n  } = getStateInformation(state);\n  return (\n    <Select\n      onChange={index => actions.changeQuestion({ index, type: type.toUpperCase() })}\n      defaultValue={questionIndex}\n      style={{ minWidth: 200 }}\n    >\n      { questions.map((q, i) => <Option key={q.name} value={i}>{q.name}</Option>)}\n    </Select>\n  );\n};\n\nexport default withRouter(connect(\n  (state) => {\n    return {\n      state\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        changeQuestion: ({ index, type }) => dispatch(changeQuestion({ index, type }))\n      }\n    };\n  }\n)(QuestionSelector));\n","export function changeCode({ compiledCode, rawCode, type }) {\n  return {\n    type: `${type}/CODE/CHANGE`,\n    compiledCode,\n    rawCode\n  };\n}\n\nexport function changeQuestion({ index, type }) {\n  return {\n    type: `${type}/QUESTION/CHANGE`,\n    index\n  };\n}\n\nexport function resetQuestion({ type }) {\n  return {\n    type: `${type}/QUESTION/RESET`\n  };\n}\n","import React from 'react';\nimport { Select } from 'antd';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { changeCategory } from 'app/actions/category';\n\nimport { getCategories } from 'app/questions/index';\n\nconst categories = getCategories();\nconst { Option } = Select;\n\nconst CategorySelector = ({ actions, index }) => (\n  <Select\n    onChange={actions.changeCategory}\n    defaultValue={index}\n    style={{ minWidth: 200 }}\n  >\n    { categories.map((q, i) => <Option key={q.name} value={i}>{q.name}</Option>)}\n  </Select>\n);\n\nexport default withRouter(connect(\n  (state) => {\n    return {\n      index: state.category.index\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        changeCategory: index => dispatch(changeCategory(index))\n      }\n    };\n  }\n)(CategorySelector));\n","export function changeCategory(index) {\n  return {\n    type: 'CATEGORY/CHANGE',\n    index\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { resetQuestion } from 'app/actions/code';\n\nimport QuestionSelector from 'app/components/Selectors/QuestionSelector';\nimport CategorySelector from 'app/components/Selectors/CategorySelector';\n\nimport { Button } from 'antd';\nimport styles from './ControlWidget.module.scss';\n\nconst ControlWidget = ({ actions, type }) => (\n  <div className={styles.control}>\n    <CategorySelector />\n    <QuestionSelector />\n    <Button type=\"danger\" onClick={() => actions.resetQuestion(type)}>Reset</Button>\n  </div>\n);\n\nexport default withRouter(connect(\n  () => {\n    return {\n\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        resetQuestion: type => dispatch(resetQuestion({ type: type.toUpperCase() }))\n      }\n    };\n  }\n)(ControlWidget));\n","import React from 'react';\nimport styles from './ResultWidget.module.scss';\n\nconst ResultWidget = () => (\n  <div className={styles.result} id=\"result\" />\n);\n\nexport default ResultWidget;\n","import React from 'react';\nimport styles from './AnswerWidget.module.scss';\n\nconst AnswerWidget = () => (\n  <div id=\"answer\" className={styles.answer} />\n);\n\nexport default AnswerWidget;\n","const spy = (obj, methodName) => {\n  const origFn = obj[methodName];\n  let callHistory = [];\n  let calledWith = {};\n\n  const secret = Math.random().toFixed(4) + '';\n  obj[methodName] = (...args) => {\n    const result = origFn.apply(obj, args);\n    callHistory.push(args);\n    calledWith[args.join(secret)] = true;\n    return result;\n  };\n  return {\n    calledWith: (...args) => !!calledWith[args.join(secret)],\n    callCount: () => callHistory.length,\n    restore: () => (obj[methodName] = origFn)\n  };\n};\n\nexport default spy;\n","import { createHarness } from 'tape';\n\nconst tryCatchPatch = t => (description, testBlock) => {\n  try {\n    t.comment(description);\n    testBlock(t);\n  } catch (e) {\n    t.fail(e);\n  }\n};\n\nconst combinePatch = (tape, patches) => (...args) => {\n  const [cb] = args.slice(-1);\n  if (typeof cb !== 'function') {\n    throw new Error('should provide callback');\n  }\n  tape(...args.slice(0, -1), (t) => {\n    for (let key in patches) {\n      t[key] = patches[key](t);\n    }\n    try {\n      cb(t);\n    } catch (e) {\n      t.fail(e);\n    }\n  });\n};\n\nconst getPatchedTape = (onUpdate) => {\n  const harness = createHarness();\n  const stream = harness.createStream({ objectMode: true });\n  stream.on('data', onUpdate);\n  return combinePatch(harness, {\n    subtest: tryCatchPatch,\n    should: tryCatchPatch\n  });\n};\n\nexport default getPatchedTape ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { renderToString } from 'react-dom/server';\nimport sinon from 'sinon';\nimport vm from 'vm';\nimport spy from './spy';\nimport getPatchedTape from './tape';\n\nconst wrapCode = (code = '') => {\n  return code.replace(/for *\\(.*\\{|while *\\(.*\\{|do *\\{/g, (loopHead) => {\n    return `let count = 0;\n      const detector = (c) => {\n        if (c > 100000) {\n          throw new Error('infinite');\n        }\n      }\n      ${loopHead}\n      detector(count++);\n    `;\n  });\n};\n\nconst runCode = ({ code, wrappedConsole, onTapeUpdate }) => {\n  let script = null;\n  let context = null;\n  const clock = sinon.useFakeTimers();\n  let test = null;\n  if (onTapeUpdate) {\n    test = getPatchedTape(onTapeUpdate);\n  }\n  // should hijack setTimeout before pass to sandbox\n  const sandbox = {\n    setTimeout: window.setTimeout, // need to be passed also...\n    console: wrappedConsole,\n    sinon,\n    describe: test,\n    test,\n    clock,\n    spy,\n    React,\n    ReactDOM,\n    root: document.getElementById('result'),\n    answer: document.getElementById('answer'),\n    renderToString\n  };\n  try {\n    script = new vm.Script(wrapCode(code));\n    // eslint-disable-next-line\n    context = new vm.createContext(sandbox);\n    script.runInContext(context);\n  } catch (e) {\n    script = new vm.Script(wrapCode(''));\n    // eslint-disable-next-line\n    context = new vm.createContext(sandbox);\n    script.runInContext(context);\n    wrappedConsole.log(e);\n  }\n  clock.restore();\n};\n\n// const debouncedRunCode = _.debounce(runCode, 200);\n\nexport default runCode;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport ConsoleWidget from 'app/components/Widgets/ConsoleWidget';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport ControlWidget from 'app/components/Widgets/ControlWidget';\nimport ResultWidget from 'app/components/Widgets/ResultWidget';\nimport AnswerWidget from 'app/components/Widgets/AnswerWidget';\n\nimport { resetConsole } from 'app/actions/console';\n\nimport { getStateInformation } from 'app/utils/stateHelper';\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport styles from './ReactPage.module.scss';\n\n\nclass ReactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n  }\n\n  componentDidMount() {\n    const { compiledCode, wrappedConsole, actions } = this.props;\n    actions.resetConsole();\n    debouncedRunCode({ code: compiledCode, wrappedConsole });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { compiledCode: previousCompiledCode } = this.props;\n    const { compiledCode, wrappedConsole, actions } = nextProps;\n    if (previousCompiledCode !== compiledCode) {\n      actions.resetConsole();\n      debouncedRunCode({ code: compiledCode, wrappedConsole });\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      code,\n      handleCodeChange,\n      console: _console\n    } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'answer', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'result', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'console', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>\n        <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n          <GridItem key=\"code\">\n            <CodeWidget\n              handleCodeChange={handleCodeChange}\n              data={code}\n              mode=\"jsx\"\n              theme=\"monokai\"\n            />\n          </GridItem>\n          <GridItem key=\"answer\">\n            <AnswerWidget />\n          </GridItem>\n          <GridItem key=\"control\">\n            <ControlWidget type=\"react\" />\n          </GridItem>\n          <GridItem key=\"result\">\n            <ResultWidget />\n          </GridItem>\n          <GridItem key=\"console\">\n            <ConsoleWidget data={_console} />\n          </GridItem>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => {\n    const { code, questionIndex, compiledCode } = getStateInformation(state);\n    return {\n      compiledCode,\n      questionIndex,\n      code,\n      console: state.console\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        resetConsole: () => dispatch(resetConsole())\n      }\n    };\n  }\n)(ReactPage));\n","export function resetConsole() {\n  return {\n    type: 'CONSOLE/RESET'\n  };\n}\n\nexport function addConsole(key, ...args) {\n  return {\n    type: 'CONSOLE/ADD',\n    key,\n    args: [...args]\n  };\n}","import React from 'react';\nimport AceEditor from 'react-ace';\nimport styles from './TestWidget.module.scss';\n\nconst TestWidget = ({ data }) => (\n  <div\n    className={`${styles['test-widget']}`}\n  >\n    <AceEditor\n      showPrintMargin={false}\n      mode=\"javascript\"\n      theme=\"textmate\"\n      value={data}\n      readOnly\n      tabSize={2}\n    />\n  </div>\n);\n\nexport default TestWidget;\n","import React from 'react';\nimport styles from './TapeWidget.module.scss';\n\nconst TestRow = row => (\n  <div className={styles.test}>\n    { row.name }\n  </div>\n);\n\nconst AssertRow = (row) => {\n  const actual = typeof row.actual === 'object' ? JSON.stringify(row.actual) : `${row.actual}`;\n  const expected = typeof row.expected === 'object' ? JSON.stringify(row.expected) : `${row.expected}`;\n  return (\n    <div className={`${styles.assert} ${row.ok ? styles.ok : styles.fail}`}>\n      <div className={row.ok ? styles.ok : styles.fail}>{row.ok ? 'OK' : 'FAIL'}</div>\n      { row.name ? <div className={styles.name}>{ `${row.name}` }</div> : null }\n      {\n        !row.ok\n          ? (\n            <>\n              <div className={styles.actual}>{ actual }</div>\n              <div className={styles['not-equal']}>!=</div>\n              <div className={styles.expected}>{ expected }</div>\n              {\n                typeof row.actual === 'string' && typeof row.expected === 'string'\n                  ? (\n                    <div className={styles.diff}>\n                      <span className={styles.expected}>{ expected }</span>\n                      <span className={styles.actual}>{ actual }</span>\n                    </div>\n                  )\n                  : null\n              }\n            </>\n          )\n          : null\n      }\n    </div>\n  );\n};\n\n// TODO: add endrow component\nconst EndRow = row => (\n  <div>\n    { JSON.stringify(row) }\n  </div>\n);\n\nconst DescriptionRow = ({ description }) => (\n  <div className={styles.description}>\n    { description }\n  </div>\n);\n\nconst getRow = (row) => {\n  switch (row.type) {\n    case 'test':\n      return <TestRow key={JSON.stringify(row)} {...row} />;\n    case 'assert':\n      return <AssertRow key={JSON.stringify(row)} {...row} />;\n    case 'end':\n      return <EndRow key={JSON.stringify(row)} {...row} />;\n    case undefined && typeof row === 'string':\n      return <DescriptionRow description={row} key={row} />;\n    default:\n      return null;\n  }\n};\n\nconst TapeWidget = ({ data }) => (\n  <div className={styles.tape}>{ data.map(getRow) }</div>\n);\n\nexport default TapeWidget;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport ConsoleWidget from 'app/components/Widgets/ConsoleWidget';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport TestWidget from 'app/components/Widgets/TestWidget';\nimport TapeWidget from 'app/components/Widgets/TapeWidget';\nimport ControlWidget from 'app/components/Widgets/ControlWidget';\n\nimport { addTape, resetTape } from 'app/actions/tape';\nimport { resetConsole } from 'app/actions/console';\n\nimport { getQuestions } from 'app/questions/index';\n\nimport debouncedRunCode from 'app/utils/runCode';\nimport { getStateInformation } from 'app/utils/stateHelper';\n\nimport styles from './JavaScriptPage.module.scss';\n\nconst questions = getQuestions('javascript');\n\nclass JavaScriptPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n  }\n\n  componentDidMount() {\n    const { compiledCode, wrappedConsole, actions } = this.props;\n    actions.resetConsole();\n    debouncedRunCode({ code: compiledCode, wrappedConsole, onTapeUpdate: actions.addTape });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { compiledCode: previousCompiledCode } = this.props;\n    const { compiledCode, wrappedConsole, actions } = nextProps;\n    if (previousCompiledCode !== compiledCode) {\n      actions.resetConsole();\n      actions.resetTape();\n      debouncedRunCode({ code: compiledCode, wrappedConsole, onTapeUpdate: actions.addTape });\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      code,\n      questionIndex,\n      handleCodeChange,\n      tape,\n      console: _console\n    } = this.props;\n    const { test } = questions[questionIndex];\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'tape', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'console', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>\n        <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n          <GridItem key=\"code\">\n            <CodeWidget\n              handleCodeChange={handleCodeChange}\n              data={code}\n              mode=\"javascript\"\n              theme=\"monokai\"\n            />\n          </GridItem>\n          <GridItem key=\"test\">\n            <TestWidget data={test} />\n          </GridItem>\n          <GridItem key=\"control\">\n            <ControlWidget type=\"javascript\" />\n          </GridItem>\n          <GridItem key=\"tape\">\n            <TapeWidget data={tape} />\n          </GridItem>\n          <GridItem key=\"console\">\n            <ConsoleWidget data={_console} />\n          </GridItem>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => {\n    const { code, questionIndex, compiledCode } = getStateInformation(state);\n    return {\n      compiledCode,\n      questionIndex,\n      code,\n      tape: state.tape,\n      console: state.console\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        resetTape: () => dispatch(resetTape()),\n        addTape: data => dispatch(addTape(data)),\n        resetConsole: () => dispatch(resetConsole())\n      }\n    };\n  }\n)(JavaScriptPage));\n","export function resetTape() {\n  return {\n    type: 'TAPE/RESET'\n  };\n}\n\nexport function addTape(data) {\n  return {\n    type: 'TAPE/ADD',\n    data\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { transform } from '@babel/standalone';\n\nimport { changeCode } from 'app/actions/code';\nimport { resetConsole } from 'app/actions/console';\n\nimport createWrappedConsole from 'app/utils/consoleFactory';\nimport { getStateInformation } from 'app/utils/stateHelper';\n\nimport ReactPage from './ReactPage';\nimport JavaScriptPage from './JavaScriptPage';\n\nconst getPageComponent = (args) => {\n  switch (args.index) {\n    case 1: {\n      return <ReactPage {...args} />;\n    }\n    default: {\n      return <JavaScriptPage {...args} />;\n    }\n  }\n};\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    const { actions } = this.props;\n    const { _dispatch: dispatch } = actions;\n    this.wrappedConsole = createWrappedConsole(console, dispatch);\n  }\n\n  componentDidMount() {\n    const { state, history } = this.props;\n    if (!state.login.isLogin) {\n      history.push('/login');\n      return;\n    }\n    const { code } = getStateInformation(state);\n    this.handleCodeChange(code);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { state: previousState } = prevProps;\n    const { state } = this.props;\n    const { categoryIndex: previousCategoryIndex } = getStateInformation(previousState);\n    const { categoryIndex, code } = getStateInformation(state);\n    if (previousCategoryIndex !== categoryIndex) {\n      this.handleCodeChange(code);\n    }\n  }\n\n  handleCodeChange = (newCode) => {\n    const { actions, state } = this.props;\n    const { question, type } = getStateInformation(state);\n    const fullCode = `${newCode} ${question.test}`;\n    try {\n      const { code } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      actions.changeCode({ compiledCode: code, rawCode: newCode, type });\n    } catch (e) {\n      actions.changeCode({ rawCode: newCode, type });\n      actions.resetConsole();\n      this.wrappedConsole.log(e);\n    }\n  }\n\n  render() {\n    const { state } = this.props;\n    const { handleCodeChange, wrappedConsole } = this;\n    return (\n      <React.Fragment>\n        { getPageComponent({ index: state.category.index, handleCodeChange, wrappedConsole }) }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => {\n    return {\n      state\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        resetConsole: () => dispatch(resetConsole()),\n        changeCode: args => dispatch(changeCode({ ...args, type: (args.type || 'javascript').toUpperCase() })),\n        _dispatch: dispatch\n      }\n    };\n  }\n)(Page));\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport LoginPage from 'app/pages/LoginPage';\nimport ExamPage from 'app/pages/ExamPage';\n\nconst { PUBLIC_URL } = process.env;\n\nconst App = () => (\n  <Router basename={PUBLIC_URL}>\n    <div>\n      <Route exact path=\"/\" component={ExamPage} />\n      <Route exact path=\"/login\" component={LoginPage} />\n    </div>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport 'antd/dist/antd.css';\n\nimport { initErrorLogging } from 'app/utils/sentry';\n\nimport reducer from 'app/reducers';\nimport App from './App';\nimport './index.css';\n\ninitErrorLogging();\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__y3k1v\",\"item\":\"Grid_item__BQKRX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"Border_border__2Q5d8\",\"vertical\":\"Border_vertical__3jdDk\",\"horizontal\":\"Border_horizontal__3wEyV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"console-widget\":\"ConsoleWidget_console-widget__YHsu7\",\"console\":\"ConsoleWidget_console__2LJkm\"};"],"sourceRoot":""}